{"version":3,"sources":["webpack://MCP/webpack/bootstrap","webpack://MCP/./src/SaclaySlitherGame.ts","webpack://MCP/./node_modules/bindings sync","webpack://MCP/./node_modules/bindings/bindings.js","webpack://MCP/external \"http\"","webpack://MCP/external \"events\"","webpack://MCP/./node_modules/ws/lib/websocket.js","webpack://MCP/./node_modules/ws/lib/constants.js","webpack://MCP/external \"url\"","webpack://MCP/./src/Snake.ts","webpack://MCP/./node_modules/quadtree-lib/build/js/quadtree.min.js","webpack://MCP/./node_modules/ws/lib/websocket-server.js","webpack://MCP/./node_modules/utf-8-validate/fallback.js","webpack://MCP/./node_modules/utf-8-validate/index.js","webpack://MCP/external \"stream\"","webpack://MCP/./node_modules/ws/lib/event-target.js","webpack://MCP/./node_modules/bufferutil/fallback.js","webpack://MCP/external \"fs\"","webpack://MCP/./node_modules/bufferutil/index.js","webpack://MCP/external \"zlib\"","webpack://MCP/./node_modules/async-limiter/index.js","webpack://MCP/external \"tls\"","webpack://MCP/external \"net\"","webpack://MCP/external \"https\"","webpack://MCP/./node_modules/ws/index.js","webpack://MCP/./src/NetworkSnake.ts","webpack://MCP/./src/server.ts","webpack://MCP/./node_modules/ws/lib/permessage-deflate.js","webpack://MCP/./src/util.ts","webpack://MCP/./node_modules/ws/lib/buffer-util.js","webpack://MCP/external \"crypto\"","webpack://MCP/external \"path\"","webpack://MCP/./node_modules/ws/lib/sender.js","webpack://MCP/./node_modules/ws/lib/validation.js","webpack://MCP/./node_modules/ws/lib/receiver.js","webpack://MCP/./node_modules/ws/lib/extension.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","SaclaySlitherGame","[object Object]","this","foods","snakes","gaussR","gauss","globZoom","automaticZoom","state","frameCount","lastTime","panX","panY","targetX","targetY","names","init","k","BORDER_SIZE","NBINITIALSNAKES","NBINITIALFOODS","IMG_SIZE","LOOSEWEIGHT","LOOSEWEIGHTPACE","WORLDRADIUS","MIN_SPEED","PREF_SPEED","MAX_SPEED","SPACEBETWEENSEGMENTS","MAX_TURN","Math","PI","colors","teamNames","webpackEmptyContext","req","e","Error","code","keys","resolve","id","fs","path","join","dirname","exists","accessSync","existsSync","defaults","arrow","process","env","NODE_BINDINGS_ARROW","compiled","NODE_BINDINGS_COMPILED_DIR","platform","arch","version","versions","node","bindings","try","opts","map","module_root","getRoot","getFileName","extname","tries","length","b","err","apply","push","test","message","a","calling_file","origPST","prepareStackTrace","origSTL","stackTraceLimit","dummy","fileName","st","__filename","captureStackTrace","stack","file","dir","prev","cwd","require","EventEmitter","crypto","https","http","net","tls","url","PerMessageDeflate","EventTarget","extension","constants","Receiver","Sender","readyStates","kWebSocket","protocolVersions","closeTimeout","WebSocket","address","protocols","options","super","readyState","CONNECTING","protocol","_binaryType","BINARY_TYPES","_closeFrameReceived","_closeFrameSent","_closeMessage","_closeTimer","_closeCode","_extensions","_isServer","_receiver","_sender","_socket","Array","isArray","undefined","initAsClient","CLOSING","CLOSED","OPEN","binaryType","type","indexOf","bufferedAmount","bufferSize","_bufferedBytes","extensions","socket","head","maxPayload","receiver","on","receiverOnConclude","receiverOnDrain","receiverOnError","receiverOnMessage","receiverOnPing","receiverOnPong","setTimeout","setNoDelay","unshift","socketOnClose","socketOnData","socketOnEnd","socketOnError","emit","extensionName","cleanup","removeAllListeners","data","msg","abortHandshake","_req","end","close","writable","destroy","mask","cb","toString","ping","EMPTY_BUFFER","pong","assign","binary","compress","fin","send","forEach","method","listeners","_listener","listener","removeListener","addEventListener","removeEventListener","protocolVersion","perMessageDeflate","createConnection","socketPath","hostname","timeout","auth","host","port","RangeError","parsedUrl","href","parse","isUnixSocket","pathname","isSecure","randomBytes","httpObj","search","tlsConnect","netConnect","startsWith","slice","headers","Sec-WebSocket-Version","Sec-WebSocket-Key","Connection","Upgrade","format","offer","origin","Origin","username","password","parts","split","agent","_socketPath","handshakeTimeout","aborted","emitClose","res","statusCode","digest","createHash","update","GUID","serverProt","protList","protError","accept","setSocket","connect","servername","websocket","stream","setHeader","abort","once","reason","resume","kStatusCode","receiverOnFinish","NOOP","read","clearTimeout","_writableState","finished","errorEmitted","chunk","write","pause","Buffer","alloc","SaclaySlitherGame_1","util_1","getRandomInt","min","max","floor","random","Point","x0","y0","x","y","rd","Food","type0","ssg0","cc","ss","f","cos","sin","SnakeStrategy","Snake","name0","weight0","dirX0","dirY0","state0","pos","size","weight","dirX","dirY","speed","dAlph","GOBESTFOOD","bestFood","dbestFood","closestFood","dclosestFood","closestSnake","closestSnakeP","dclosestSnake","closestBadSnake","closestBadSnakeP","dclosestBadSnake","ssg","norm","hypot","sqrt","p0","setWeight","weight1","acc","xn","yn","tx0","ty0","txn","tyn","locs","objx","objy","pn","snakeZoom","objspeed","dist","aobj","atan2","da","round","dd","tx","ty","splice","tlen","alph","len","ang","foodUpdate","other","a1","a2","abs","minR","lx","ly","rx","ry","dl","dr","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","width","height","maxElements","contents","oversized","Number","isInteger","children","NW","tree","NE","ceil","SW","SE","h","set","remove","configurable","clear","pushAll","u","g","v","w","E","z","M","elements","shift","colliding","onCollision","where","find","each","filter","reject","visit","pretty","label","level","WebSocketServer","callback","handleProtocols","clientTracking","verifyClient","noServer","backlog","server","TypeError","_server","createServer","body","STATUS_CODES","writeHead","Content-Length","Content-Type","listen","_removeListeners","addListeners","listening","error","upgrade","handleUpgrade","ws","clients","Set","client","terminate","toLowerCase","shouldHandle","offers","info","secure","connection","authorized","encrypted","verified","completeUpgrade","readable","trim","params","concat","add","delete","event","removeListeners","Content-type","byteLength","isValidUTF8","buf","Event","target","MessageEvent","CloseEvent","wasClean","OpenEvent","ErrorEvent","onMessage","onClose","onError","onOpen","source","output","offset","unmask","buffer","Queue","concurrency","Infinity","pending","jobs","cbs","_done","done","arrayAddMethods","methodResult","arguments","_run","job","pop","nextTick","onDone","Server","Snake_1","NetworkSnake","ws0","lastDirX","lastDirY","NetworkSnake_1","__importStar","Quadtree","console","log","wsServer","ctrlSnake","serverTime","timer","initGame","newFood","toFixed","updateSnakes","snake","moveSnake","dx","dy","ndx","ndy","AVOIDBORDER","ddx","ddy","dda","AVOIDCLOSEST","AVOIDWORST","GOCLOSESTFOOD","FASTSTRAIGHT","ROT","RANDWALK","testCollision","ip","remoteAddress","Date","substring","team","parseInt","clearInterval","setInterval","arr","Float32Array","readFloatLE","minx","miny","wh","px","py","p0x","p0y","sumSize","arrpos","reasonCode","description","Limiter","zlib","bufferUtil","TRAILER","from","EMPTY_BLOCK","kPerMessageDeflate","kWriteInProgress","kPendingClose","kTotalLength","kCallback","kBuffers","kError","zlibLimiter","isServer","_maxPayload","_options","_threshold","threshold","_deflate","_inflate","concurrencyLimit","serverNoContextTakeover","server_no_context_takeover","clientNoContextTakeover","client_no_context_takeover","serverMaxWindowBits","server_max_window_bits","clientMaxWindowBits","client_max_window_bits","configurations","normalizeParams","acceptAsServer","acceptAsClient","accepted","response","num","_decompress","result","_compress","endpoint","windowBits","Z_DEFAULT_WINDOWBITS","createInflateRaw","zlibInflateOptions","inflateOnError","inflateOnData","flush","createDeflateRaw","memLevel","zlibDeflateOptions","deflateOnData","Z_SYNC_FLUSH","reset","x1","y1","x2","y2","keyboard","keyCode","isDown","isUp","press","release","downHandler","preventDefault","upHandler","window","list","totalLength","allocUnsafe","copy","_mask","_unmask","bu","BufferUtil","validation","_firstFragment","_deflating","_queue","merge","readOnly","payloadLength","opcode","rsv1","writeUInt16BE","writeUInt32BE","isValidStatusCode","enqueue","doClose","sendFrame","frame","isBuffer","ArrayBuffer","isView","viewToBuffer","doPing","doPong","dispatch","_","dequeue","view","byteOffset","Validation","GET_INFO","GET_PAYLOAD_LENGTH_16","GET_PAYLOAD_LENGTH_64","GET_MASK","GET_DATA","INFLATING","Writable","_buffers","_compressed","_payloadLength","_fragmented","_masked","_fin","_opcode","_totalPayloadLength","_messageLength","_fragments","_state","_loop","encoding","startLoop","dst","getInfo","getPayloadLength16","getPayloadLength64","getMask","getData","consume","compressed","haveLength","readUInt16BE","readUInt32BE","pow","controlMessage","decompress","dataMessage","er","messageLength","fragments","toBuffer","toArrayBuffer","ErrorCtor","prefix","tokenChars","dest","elem","header","mustUnescape","isEscaping","inQuotes","paramName","start","charCodeAt","SyntaxError","replace","token","values"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 217);\n","import {Point, Food, Snake, SnakeStrategy} from './Snake';\n\nexport class SaclaySlitherGame {\n  static BORDER_SIZE:number            = 200;\n  static NBINITIALSNAKES:number        = 14 ;\n  static NBINITIALFOODS:number         = 10000;\n  static IMG_SIZE:number               = 128;\n\n   // combien de poids perd un serpend qui courre\n  static LOOSEWEIGHT:number     = 2;\n\n  // un serpend qui courre ne perds pas du poids a chaque affichage mais 1 fois sur LOOSEWEIGHTPACE\n  static LOOSEWEIGHTPACE:number = 4;\n\n  // La taille du monde qui a une forme de disque\n  static WORLDRADIUS:number     = 1500;\n\n  // Vitesse minimum\n  static MIN_SPEED:number       = 4; // set to 0 to allow snakes to stop !\n\n  // vitesse preferre quand tout va bien\n  static PREF_SPEED:number      = 4;\n\n  // vitesse maximum d'un serpent qui courre\n  static MAX_SPEED:number       = 8;\n\n  // length beetween 2 segments of a snake\n  static SPACEBETWEENSEGMENTS:number = 10.0;\n\n  // l'angle maximal enter la tete et le cou => c'est cet angle qui donne le \"rayon de braquage\" du serpent.\n  // mais ca depend aussi de la taille du serpent et du zoom\n  static MAX_TURN:number        = Math.PI/48;\n\n\n  static imgRadar: HTMLCanvasElement;\n\n  // game data\n  foods:Food[]                         = [];\n  snakes:(Snake|null)[]                = [];\n  gaussR:number                        = 8;\n  gauss: number[][]                    = [];\n\n  // le niveau de zoom en fonction de la taille du serpent principal\n  globZoom                             = 1.5;\n\n  // ...si le zoom automatique est actif\n  automaticZoom:boolean                = true;\n\n  state:number                         = 1;\n  frameCount:number                    = 0;\n  lastTime:number                      = 0;\n  panX:number                          = 0;\n  panY:number                          = 0;\n\n  targetX:number                       = 0;\n  targetY:number                       = 0;\n\n  names:string[]              = [\"Fred\", \"Nicolas\", \"Yacine\", \"Olivia\", \"Medhi\", \"Christian\", \"Laura\", \"Guillaume\",\n                                 \"Sandrine\", \"Lila\", \"Sarah\", \"Cecile\", \"Philippe\", \"Emmy\", \"Florian\"];\n  static colors: number[][][] = [[[0, 0, 255], [0, 0, 255], [255, 255, 255], [255, 255, 255], [255, 0, 0], [255, 0, 0]], // french\n                                  [[96, 96, 255], [96, 96, 192], [96, 96, 128], [96, 96, 96], [96, 96, 128], [96, 96, 192]], // shades of blue\n                                  [[255, 96, 0], [192, 96, 0], [128, 96, 0], [96, 96, 0], [128, 96, 0], [192, 96, 0]], // shades of red\n                                  [[0, 0, 255], [0, 255, 255], [0, 255, 0], [255, 255, 0], [255, 0, 0], [255, 0, 255]], // rainbow\n                                  [[0, 255, 0], [0, 255, 0], [255, 0, 0], [255, 0, 0], [255, 0, 0], [255, 0, 0]], // portugese\n                                  [[0, 0, 0], [0, 0, 0], [255, 0, 0], [255, 0, 0], [255, 255, 0], [255, 255, 0]], // german\n                                  [[255, 0, 0], [255, 0, 0], [255, 0, 0], [255, 255, 0], [255, 255, 0], [255, 255, 0]], // spannish\n                                  [[255, 0, 0], [255, 255, 0], [255, 0, 0], [255, 255, 0], [255, 0, 0], [255, 255, 0]], // castillan\n                                  [[255, 0, 0], [255, 0, 0], [255, 255, 255], [255, 255, 255], [0, 0, 255], [0, 0, 255]], // dutch\n                                  [[255, 0, 0], [255, 0, 0], [255, 255, 255], [255, 255, 255], [255, 0, 255], [255, 0, 0]], // austrian/dannish/swiss\n                                  [[0, 192, 0], [0, 192, 0], [255, 255, 255], [255, 255, 255], [255, 128, 0], [255, 128, 0]], // irish\n                                  [[0, 0, 0], [0, 0, 0], [255, 255, 0], [255, 255, 0], [255, 0, 0], [255, 0, 0]], // belgian\n                                  [[255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255], [255, 255, 255]], // all white\n                                  [[0, 255, 0], [0, 255, 0], [255, 255, 255], [255, 255, 255], [255, 0, 0], [255, 0, 0]]      // italian\n                                ];\n\n  static teamNames = [\"France\", \"Blues\", \"Reds\", \"Rainbow\", \"Portugal\", \"Germany\", \"Spain\", \"Castilla\", \"Nederland\", \"Austria\", \"Ireland\", \"Belgium\", \"White knights\", \"Italie\"]\n\n\n  constructor() {\n\n    this.init();\n\n        // intitial creation of the snakes\n\n\n      //app.stage.addChild(this.snakes[0]!.container);\n\n    // initial creation of the food\n    for (let k:number=0; k<10000; k++) {\n      //let f:Food = Food.newFood(this);\n      //this.foodLayer.addChild(f.sprite);\n      //this.foods.push(f);\n    }\n\n  }\n\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////////////////////// INIT //////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////\n  init(){\n\n  }\n\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 100;","\n/**\n * Module dependencies.\n */\n\nvar fs = require('fs')\n  , path = require('path')\n  , join = path.join\n  , dirname = path.dirname\n  , exists = ((fs.accessSync && function (path) { try { fs.accessSync(path); } catch (e) { return false; } return true; })\n      || fs.existsSync || path.existsSync)\n  , defaults = {\n        arrow: process.env.NODE_BINDINGS_ARROW || ' → '\n      , compiled: process.env.NODE_BINDINGS_COMPILED_DIR || 'compiled'\n      , platform: process.platform\n      , arch: process.arch\n      , version: process.versions.node\n      , bindings: 'bindings.node'\n      , try: [\n          // node-gyp's linked version in the \"build\" dir\n          [ 'module_root', 'build', 'bindings' ]\n          // node-waf and gyp_addon (a.k.a node-gyp)\n        , [ 'module_root', 'build', 'Debug', 'bindings' ]\n        , [ 'module_root', 'build', 'Release', 'bindings' ]\n          // Debug files, for development (legacy behavior, remove for node v0.9)\n        , [ 'module_root', 'out', 'Debug', 'bindings' ]\n        , [ 'module_root', 'Debug', 'bindings' ]\n          // Release files, but manually compiled (legacy behavior, remove for node v0.9)\n        , [ 'module_root', 'out', 'Release', 'bindings' ]\n        , [ 'module_root', 'Release', 'bindings' ]\n          // Legacy from node-waf, node <= 0.4.x\n        , [ 'module_root', 'build', 'default', 'bindings' ]\n          // Production \"Release\" buildtype binary (meh...)\n        , [ 'module_root', 'compiled', 'version', 'platform', 'arch', 'bindings' ]\n        ]\n    }\n\n/**\n * The main `bindings()` function loads the compiled bindings for a given module.\n * It uses V8's Error API to determine the parent filename that this function is\n * being invoked from, which is then used to find the root directory.\n */\n\nfunction bindings (opts) {\n\n  // Argument surgery\n  if (typeof opts == 'string') {\n    opts = { bindings: opts }\n  } else if (!opts) {\n    opts = {}\n  }\n\n  // maps `defaults` onto `opts` object\n  Object.keys(defaults).map(function(i) {\n    if (!(i in opts)) opts[i] = defaults[i];\n  });\n\n  // Get the module root\n  if (!opts.module_root) {\n    opts.module_root = exports.getRoot(exports.getFileName())\n  }\n\n  // Ensure the given bindings name ends with .node\n  if (path.extname(opts.bindings) != '.node') {\n    opts.bindings += '.node'\n  }\n\n  var tries = []\n    , i = 0\n    , l = opts.try.length\n    , n\n    , b\n    , err\n\n  for (; i<l; i++) {\n    n = join.apply(null, opts.try[i].map(function (p) {\n      return opts[p] || p\n    }))\n    tries.push(n)\n    try {\n      b = opts.path ? require.resolve(n) : require(n)\n      if (!opts.path) {\n        b.path = n\n      }\n      return b\n    } catch (e) {\n      if (!/not find/i.test(e.message)) {\n        throw e\n      }\n    }\n  }\n\n  err = new Error('Could not locate the bindings file. Tried:\\n'\n    + tries.map(function (a) { return opts.arrow + a }).join('\\n'))\n  err.tries = tries\n  throw err\n}\nmodule.exports = exports = bindings\n\n\n/**\n * Gets the filename of the JavaScript file that invokes this function.\n * Used to help find the root directory of a module.\n * Optionally accepts an filename argument to skip when searching for the invoking filename\n */\n\nexports.getFileName = function getFileName (calling_file) {\n  var origPST = Error.prepareStackTrace\n    , origSTL = Error.stackTraceLimit\n    , dummy = {}\n    , fileName\n\n  Error.stackTraceLimit = 10\n\n  Error.prepareStackTrace = function (e, st) {\n    for (var i=0, l=st.length; i<l; i++) {\n      fileName = st[i].getFileName()\n      if (fileName !== __filename) {\n        if (calling_file) {\n            if (fileName !== calling_file) {\n              return\n            }\n        } else {\n          return\n        }\n      }\n    }\n  }\n\n  // run the 'prepareStackTrace' function above\n  Error.captureStackTrace(dummy)\n  dummy.stack\n\n  // cleanup\n  Error.prepareStackTrace = origPST\n  Error.stackTraceLimit = origSTL\n\n  return fileName\n}\n\n/**\n * Gets the root directory of a module, given an arbitrary filename\n * somewhere in the module tree. The \"root directory\" is the directory\n * containing the `package.json` file.\n *\n *   In:  /home/nate/node-native-module/lib/index.js\n *   Out: /home/nate/node-native-module\n */\n\nexports.getRoot = function getRoot (file) {\n  var dir = dirname(file)\n    , prev\n  while (true) {\n    if (dir === '.') {\n      // Avoids an infinite loop in rare cases, like the REPL\n      dir = process.cwd()\n    }\n    if (exists(join(dir, 'package.json')) || exists(join(dir, 'node_modules'))) {\n      // Found the 'package.json' file or 'node_modules' dir; we're done\n      return dir\n    }\n    if (prev === dir) {\n      // Got to the top\n      throw new Error('Could not find module root given file: \"' + file\n                    + '\". Do you have a `package.json` file? ')\n    }\n    // Try the parent dir next\n    prev = dir\n    dir = join(dir, '..')\n  }\n}\n","module.exports = require(\"http\");","module.exports = require(\"events\");","'use strict';\n\nconst EventEmitter = require('events');\nconst crypto = require('crypto');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst url = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst EventTarget = require('./event-target');\nconst extension = require('./extension');\nconst constants = require('./constants');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\n\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst kWebSocket = constants.kWebSocket;\nconst protocolVersions = [8, 13];\nconst closeTimeout = 30 * 1000; // Allow 30 seconds to terminate the connection cleanly.\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|url.Url|url.URL)} address The URL to which to connect\n   * @param {(String|String[])} protocols The subprotocols\n   * @param {Object} options Connection options\n   */\n  constructor (address, protocols, options) {\n    super();\n\n    this.readyState = WebSocket.CONNECTING;\n    this.protocol = '';\n\n    this._binaryType = constants.BINARY_TYPES[0];\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = '';\n    this._closeTimer = null;\n    this._closeCode = 1006;\n    this._extensions = {};\n    this._isServer = true;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      if (Array.isArray(protocols)) {\n        protocols = protocols.join(', ');\n      } else if (typeof protocols === 'object' && protocols !== null) {\n        options = protocols;\n        protocols = undefined;\n      }\n\n      initAsClient.call(this, address, protocols, options);\n    }\n  }\n\n  get CONNECTING () { return WebSocket.CONNECTING; }\n  get CLOSING () { return WebSocket.CLOSING; }\n  get CLOSED () { return WebSocket.CLOSED; }\n  get OPEN () { return WebSocket.OPEN; }\n\n  /**\n   * This deviates from the WHATWG interface since ws doesn't support the required\n   * default \"blob\" type (instead we define a custom \"nodebuffer\" type).\n   *\n   * @type {String}\n   */\n  get binaryType () {\n    return this._binaryType;\n  }\n\n  set binaryType (type) {\n    if (constants.BINARY_TYPES.indexOf(type) < 0) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount () {\n    if (!this._socket) return 0;\n\n    //\n    // `socket.bufferSize` is `undefined` if the socket is closed.\n    //\n    return (this._socket.bufferSize || 0) + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions () {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Number} maxPayload The maximum allowed message size\n   * @private\n   */\n  setSocket (socket, head, maxPayload) {\n    const receiver = new Receiver(\n      this._binaryType,\n      this._extensions,\n      maxPayload\n    );\n\n    this._sender = new Sender(socket, this._extensions);\n    this._receiver = receiver;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    socket.setTimeout(0);\n    socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this.readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose () {\n    this.readyState = WebSocket.CLOSED;\n\n    if (!this._socket) {\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} code Status code explaining why the connection is closing\n   * @param {String} data A string explaining why the connection is closing\n   * @public\n   */\n  close (code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (this._closeFrameSent && this._closeFrameReceived) this._socket.end();\n      return;\n    }\n\n    this.readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (this._socket.writable) {\n        if (this._closeFrameReceived) this._socket.end();\n\n        //\n        // Ensure that the connection is closed even if the closing handshake\n        // fails.\n        //\n        this._closeTimer = setTimeout(\n          this._socket.destroy.bind(this._socket),\n          closeTimeout\n        );\n      }\n    });\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} data The data to send\n   * @param {Boolean} mask Indicates whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when the ping is sent\n   * @public\n   */\n  ping (data, mask, cb) {\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (this.readyState !== WebSocket.OPEN) {\n      const err = new Error(\n        `WebSocket is not open: readyState ${this.readyState} ` +\n          `(${readyStates[this.readyState]})`\n      );\n\n      if (cb) return cb(err);\n      throw err;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || constants.EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} data The data to send\n   * @param {Boolean} mask Indicates whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when the pong is sent\n   * @public\n   */\n  pong (data, mask, cb) {\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (this.readyState !== WebSocket.OPEN) {\n      const err = new Error(\n        `WebSocket is not open: readyState ${this.readyState} ` +\n          `(${readyStates[this.readyState]})`\n      );\n\n      if (cb) return cb(err);\n      throw err;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || constants.EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} options.compress Specifies whether or not to compress `data`\n   * @param {Boolean} options.binary Specifies whether `data` is binary or text\n   * @param {Boolean} options.fin Specifies whether the fragment is the last one\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when data is written out\n   * @public\n   */\n  send (data, options, cb) {\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (this.readyState !== WebSocket.OPEN) {\n      const err = new Error(\n        `WebSocket is not open: readyState ${this.readyState} ` +\n          `(${readyStates[this.readyState]})`\n      );\n\n      if (cb) return cb(err);\n      throw err;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    const opts = Object.assign({\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true\n    }, options);\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || constants.EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate () {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this._socket) {\n      this.readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\nreadyStates.forEach((readyState, i) => {\n  WebSocket[readyStates[i]] = i;\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    /**\n     * Return the listener of the event.\n     *\n     * @return {(Function|undefined)} The event listener or `undefined`\n     * @public\n     */\n    get () {\n      const listeners = this.listeners(method);\n      for (var i = 0; i < listeners.length; i++) {\n        if (listeners[i]._listener) return listeners[i]._listener;\n      }\n    },\n    /**\n     * Add a listener for the event.\n     *\n     * @param {Function} listener The listener to add\n     * @public\n     */\n    set (listener) {\n      const listeners = this.listeners(method);\n      for (var i = 0; i < listeners.length; i++) {\n        //\n        // Remove only the listeners added via `addEventListener`.\n        //\n        if (listeners[i]._listener) this.removeListener(method, listeners[i]);\n      }\n      this.addEventListener(method, listener);\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = EventTarget.addEventListener;\nWebSocket.prototype.removeEventListener = EventTarget.removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {(String|url.Url|url.URL)} address The URL to which to connect\n * @param {String} protocols The subprotocols\n * @param {Object} options Connection options\n * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable permessage-deflate\n * @param {Number} options.handshakeTimeout Timeout in milliseconds for the handshake request\n * @param {Number} options.protocolVersion Value of the `Sec-WebSocket-Version` header\n * @param {String} options.origin Value of the `Origin` or `Sec-WebSocket-Origin` header\n * @private\n */\nfunction initAsClient (address, protocols, options) {\n  options = Object.assign({\n    protocolVersion: protocolVersions[1],\n    perMessageDeflate: true\n  }, options, {\n    createConnection: undefined,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: undefined,\n    auth: undefined,\n    host: undefined,\n    path: undefined,\n    port: undefined\n  });\n\n  if (protocolVersions.indexOf(options.protocolVersion) === -1) {\n    throw new RangeError(\n      `Unsupported protocol version: ${options.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  this._isServer = false;\n\n  var parsedUrl;\n\n  if (typeof address === 'object' && address.href !== undefined) {\n    parsedUrl = address;\n    this.url = address.href;\n  } else {\n    parsedUrl = url.parse(address);\n    this.url = address;\n  }\n\n  const isUnixSocket = parsedUrl.protocol === 'ws+unix:';\n\n  if (!parsedUrl.host && (!isUnixSocket || !parsedUrl.pathname)) {\n    throw new Error(`Invalid URL: ${this.url}`);\n  }\n\n  const isSecure = parsedUrl.protocol === 'wss:' || parsedUrl.protocol === 'https:';\n  const key = crypto.randomBytes(16).toString('base64');\n  const httpObj = isSecure ? https : http;\n  const path = parsedUrl.search\n    ? `${parsedUrl.pathname || '/'}${parsedUrl.search}`\n    : parsedUrl.pathname || '/';\n  var perMessageDeflate;\n\n  options.createConnection = isSecure ? tlsConnect : netConnect;\n  options.port = parsedUrl.port || (isSecure ? 443 : 80);\n  options.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  options.headers = Object.assign({\n    'Sec-WebSocket-Version': options.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    'Connection': 'Upgrade',\n    'Upgrade': 'websocket'\n  }, options.headers);\n  options.path = path;\n\n  if (options.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      options.perMessageDeflate !== true ? options.perMessageDeflate : {},\n      false\n    );\n    options.headers['Sec-WebSocket-Extensions'] = extension.format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols) {\n    options.headers['Sec-WebSocket-Protocol'] = protocols;\n  }\n  if (options.origin) {\n    if (options.protocolVersion < 13) {\n      options.headers['Sec-WebSocket-Origin'] = options.origin;\n    } else {\n      options.headers.Origin = options.origin;\n    }\n  }\n  if (parsedUrl.auth) {\n    options.auth = parsedUrl.auth;\n  } else if (parsedUrl.username || parsedUrl.password) {\n    options.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isUnixSocket) {\n    const parts = path.split(':');\n\n    if (options.agent == null && process.versions.modules < 57) {\n      //\n      // Setting `socketPath` in conjunction with `createConnection` without an\n      // agent throws an error on Node.js < 8. Work around the issue by using a\n      // different property.\n      //\n      options._socketPath = parts[0];\n    } else {\n      options.socketPath = parts[0];\n    }\n\n    options.path = parts[1];\n  }\n\n  var req = this._req = httpObj.get(options);\n\n  if (options.handshakeTimeout) {\n    req.setTimeout(\n      options.handshakeTimeout,\n      () => abortHandshake(this, req, 'Opening handshake has timed out')\n    );\n  }\n\n  req.on('error', (err) => {\n    if (this._req.aborted) return;\n\n    req = this._req = null;\n    this.readyState = WebSocket.CLOSING;\n    this.emit('error', err);\n    this.emitClose();\n  });\n\n  req.on('response', (res) => {\n    if (this.emit('unexpected-response', req, res)) return;\n\n    abortHandshake(this, req, `Unexpected server response: ${res.statusCode}`);\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    this.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the `upgrade`\n    // event.\n    //\n    if (this.readyState !== WebSocket.CONNECTING) return;\n\n    req = this._req = null;\n\n    const digest = crypto.createHash('sha1')\n      .update(key + constants.GUID, 'binary')\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(this, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    const protList = (protocols || '').split(/, */);\n    var protError;\n\n    if (!protocols && serverProt) {\n      protError = 'Server sent a subprotocol but none was requested';\n    } else if (protocols && !serverProt) {\n      protError = 'Server sent no subprotocol';\n    } else if (serverProt && protList.indexOf(serverProt) === -1) {\n      protError = 'Server sent an invalid subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(this, socket, protError);\n      return;\n    }\n\n    if (serverProt) this.protocol = serverProt;\n\n    if (perMessageDeflate) {\n      try {\n        const extensions = extension.parse(\n          res.headers['sec-websocket-extensions']\n        );\n\n        if (extensions[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(\n            extensions[PerMessageDeflate.extensionName]\n          );\n          this._extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        abortHandshake(this, socket, 'Invalid Sec-WebSocket-Extensions header');\n        return;\n      }\n    }\n\n    this.setSocket(socket, head, 0);\n  });\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect (options) {\n  options.path = options.socketPath || options._socketPath || undefined;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect (options) {\n  options.path = options.socketPath || options._socketPath || undefined;\n  options.servername = options.servername || options.host;\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket)} stream The request to abort or the\n *     socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake (websocket, stream, message) {\n  websocket.readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream.abort();\n    stream.once('abort', websocket.emitClose.bind(websocket));\n    websocket.emit('error', err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {String} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude (code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._socket.removeListener('data', socketOnData);\n  websocket._socket.resume();\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain () {\n  this[kWebSocket]._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError (err) {\n  const websocket = this[kWebSocket];\n\n  websocket.readyState = WebSocket.CLOSING;\n  websocket._closeCode = err[constants.kStatusCode];\n  websocket.emit('error', err);\n  websocket._socket.destroy();\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish () {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The message\n * @private\n */\nfunction receiverOnMessage (data) {\n  this[kWebSocket].emit('message', data);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing (data) {\n  const websocket = this[kWebSocket];\n\n  websocket.pong(data, !websocket._isServer, constants.NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong (data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * The listener of the `net.Socket` `'close'` event.\n *\n * @private\n */\nfunction socketOnClose () {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n  this[kWebSocket] = undefined;\n\n  websocket.readyState = WebSocket.CLOSING;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it.\n  //\n  websocket._socket.read();\n  websocket._receiver.end();\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData (chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd () {\n  const websocket = this[kWebSocket];\n\n  websocket.readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the `net.Socket` `'error'` event.\n *\n * @private\n */\nfunction socketOnError () {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', constants.NOOP);\n\n  if (websocket) {\n    websocket.readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n","'use strict';\n\nmodule.exports = {\n  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  EMPTY_BUFFER: Buffer.alloc(0),\n  NOOP: () => {}\n};\n","module.exports = require(\"url\");","import {SaclaySlitherGame} from './SaclaySlitherGame';\nimport {dist} from './util';\n\nfunction getRandomInt(min:number, max:number) {\n  return min+Math.floor(Math.random() * Math.floor(max-min));\n}\n\n\nexport class Point{\n  x: number;\n  y: number;\n  rd:number;\n  constructor (x0: number, y0:number) {\n    this.x = x0;\n    this.y = y0;\n    this.rd = 10;\n  }\n}\n\nexport class Food extends Point{\n  type:number;\n  constructor (x0: number, y0:number, type0:number) {\n    super(x0, y0);\n    this.type= type0;\n  }\n\n   static newFood(ssg0: SaclaySlitherGame):Food {\n    let a:number = getRandomInt(0, 10000)*Math.PI/5000;\n    let d:number = getRandomInt(0, SaclaySlitherGame.WORLDRADIUS/20);\n\n    let cc = getRandomInt(0, SaclaySlitherGame.colors.length)\n    let ss = getRandomInt(0, SaclaySlitherGame.colors[0].length);\n\n    let f:Food  = new Food(SaclaySlitherGame.WORLDRADIUS/2+d*Math.cos(a), SaclaySlitherGame.WORLDRADIUS/2+d*Math.sin(a),  cc*SaclaySlitherGame.colors[0].length+ss);\n    return f;\n  }\n}\n\nexport enum SnakeStrategy {\n    FREE = -1,\n    RANDWALK,\n    ROT,\n    FASTSTRAIGHT,\n    AVOIDCLOSEST,\n    GOCLOSESTFOOD,\n    GOBESTFOOD,\n    AVOIDWORST,\n    AVOIDBORDER\n  }\n\nexport class Snake {\n  pos:    Point[] =[];\n  size:   number = 0;\n  weight: number = 0;\n  dirX:   number = 1;\n  dirY:   number = 0;\n  speed:  number = 0;\n  type:   number;\n  name:   string;\n  dAlph:  number = 0;\n\n  state:SnakeStrategy = SnakeStrategy.GOBESTFOOD;\n\n  bestFood:Food|null          = null;\n  dbestFood:number            = 0.0;\n  closestFood:Food|null       = null;\n  dclosestFood:number         = 0.0;\n\n  closestSnake:Snake|null     = null;\n  closestSnakeP:Point|null    = null;\n  dclosestSnake:number        = 0.0;\n  closestBadSnake:Snake|null  = null;\n  closestBadSnakeP:Point|null = null;\n  dclosestBadSnake:number     = 0.0;\n\n  ssg :SaclaySlitherGame;\n\n  constructor(ssg0: SaclaySlitherGame,\n              name0: string,\n              weight0:number,\n              x0:number,\n              y0:number,\n              type0:number,\n              dirX0:number,\n              dirY0:number,\n              state0:number) {\n    this.type  = type0;\n    this.ssg   = ssg0;\n\n    this.speed = SaclaySlitherGame.PREF_SPEED;\n    this.state = state0;\n    this.name  = name0;\n\n    let norm = Math.hypot(dirX0, dirY0)/SaclaySlitherGame.SPACEBETWEENSEGMENTS;\n\n    this.dirX  = dirX0/norm;\n    this.dirY  = dirY0/norm;\n\n    this.size  = Math.floor(4+Math.sqrt(weight0)/10.0+weight0/25.0);\n\n    let p0:Point = new Point(x0, y0);\n    this.pos.push(p0);\n\n    for (let i:number=1; i<this.size; i++){\n      let p:Point = new Point(x0-i*this.dirX, y0-i*this.dirY);\n      this.pos.push(p);\n\n    }\n    this.setWeight(weight0);\n  }\n\n  setWeight(weight1:number):void {\n    this.weight = weight1;\n    // update the body\n    for (let i:number = this.size-1; i>=0; i--) {\n      let p:Point = this.pos[i];\n      p.rd = 10+Math.sqrt((this.weight-39))/4.0;\n\n      //neck\n      if (i==1) p.rd-=2;\n      if (i==2) p.rd--;\n    }\n\n    // makes the tail\n    let acc:number = 8;\n    for (let i:number = this.size-1; i>=3; i--) {\n      let p:Point = this.pos[i];\n      if (acc<p.rd)\n        p.rd = acc;\n      else\n        break;\n      acc+=1;\n    }\n\n  }\n\n  // move the head of the snake to the given position and translate the rest of the snake\n  translate(x0:number, y0:number, xn:number, yn:number) {\n    let tx0 = x0-this.pos[0].x;\n    let ty0 = y0-this.pos[0].y;\n    let txn = xn-this.pos[this.pos.length-1].x;\n    let tyn = yn-this.pos[this.pos.length-1].y;\n\n    for (let i:number = 0; i<this.pos.length; i++) {\n      this.pos[i].x += (tx0*(this.pos.length-1-i)+txn*i)/(this.pos.length-1);\n      this.pos[i].y += (ty0*(this.pos.length-1-i)+tyn*i)/(this.pos.length-1);\n    }\n  }\n\n  setLocations(locs:Float32Array){\n    for (let i:number = 0; i<this.pos.length; i++) {\n      this.pos[i].x = locs[i*2+0];\n      this.pos[i].y = locs[i*2+1];\n    }\n  }\n\n  // the snake moves to follow the given objective\n  moveSnake(objx:number, objy:number) {\n    let p0:Point = this.pos[0];\n    let pn:Point = this.pos[this.pos.length-1];\n\n    let snakeZoom:number = 0.75+64.0/(128.0+this.size);\n    //if (s==snakes[0]) println(\"moveSnake \"+s.size+\" => \"+snakeZoom);\n    let objspeed:number = dist(p0.x, p0.y, objx, objy);\n\n    // direction before and new direction\n    let aobj:number = Math.atan2(objy-p0.y, objx-p0.x);\n    let a:number    = Math.atan2(this.dirY, this.dirX);\n\n    // difference between the two\n    let da:number = aobj-a;\n    if (da>Math.PI)  da-=2*Math.PI;\n    if (da<-Math.PI) da+=2*Math.PI;\n\n    //if (s==snakes[0]) println( cos(a)+\",\"+sin(a)+\" => \"+cos(aobj)+\",\"+sin(aobj)+\"   delta=\"+da);\n\n    // if the snake turn too fast, must be thresholded\n    if (da>SaclaySlitherGame.MAX_TURN*snakeZoom*snakeZoom*snakeZoom) {\n      objx = p0.x+Math.max(objspeed, SaclaySlitherGame.MIN_SPEED)*Math.cos(a+SaclaySlitherGame.MAX_TURN*snakeZoom*snakeZoom*snakeZoom);\n      objy = p0.y+Math.max(objspeed, SaclaySlitherGame.MIN_SPEED)*Math.sin(a+SaclaySlitherGame.MAX_TURN*snakeZoom*snakeZoom*snakeZoom);\n    } else if (da<-SaclaySlitherGame.MAX_TURN*snakeZoom*snakeZoom*snakeZoom) {\n      objx = p0.x+Math.max(objspeed, SaclaySlitherGame.MIN_SPEED)*Math.cos(a-SaclaySlitherGame.MAX_TURN*snakeZoom*snakeZoom*snakeZoom);\n      objy = p0.y+Math.max(objspeed, SaclaySlitherGame.MIN_SPEED)*Math.sin(a-SaclaySlitherGame.MAX_TURN*snakeZoom*snakeZoom*snakeZoom);\n    } else {\n      objx = Math.round(p0.x+Math.max(objspeed, SaclaySlitherGame.MIN_SPEED)*Math.cos(aobj));\n      objy = Math.round(p0.y+Math.max(objspeed, SaclaySlitherGame.MIN_SPEED)*Math.sin(aobj));\n    }\n\n    let dd:number = dist(p0.x, p0.y, objx, objy);\n    let tx:number = objx;\n    let ty:number = objy;\n    if (dd>this.speed) {\n      tx = p0.x+(objx-p0.x)/dd*this.speed;\n      ty = p0.y+(objy-p0.y)/dd*this.speed;\n    }\n    if (dd>0) {\n      this.dirX = (objx-p0.x)/dd*this.speed;\n      this.dirY = (objy-p0.y)/dd*this.speed;\n    }\n\n    // si on va \"vite\" on seme de la nourriture derriere soi et on perd du poids\n    if (this.speed>SaclaySlitherGame.PREF_SPEED && this.ssg.frameCount%SaclaySlitherGame.LOOSEWEIGHTPACE==0) {\n      this.setWeight(this.weight - SaclaySlitherGame.LOOSEWEIGHT);\n\n      let f:Food = new Food(pn.x, pn.y, this.type);\n      f.rd = 1;\n\n      this.ssg.foods.push(f);\n\n      if (4+Math.sqrt(this.weight)/10.0+this.weight/25.0<this.size) {\n        //println(\"remove size because \"+(4+sqrt(snake0.weight)/10.0+snake0.weight/25.0)+\">\"+snake0.size);\n        this.size--;\n        this.pos.splice(this.pos.length-1, 1);\n      }\n      //println(snake0.weight+\" % \"+(40+LOOSEWEIGHT));\n      if (this.weight<40+SaclaySlitherGame.LOOSEWEIGHT) {\n        this.speed = SaclaySlitherGame.PREF_SPEED;\n      }\n    }\n\n    // deplace chaque segment du serpent\n    let tlen:number = 0;\n    let alph:number = this.dAlph;\n    for (let i:number = 0; i<this.pos.length; i++) {\n      alph  += 0.25;\n      let p:Point = this.pos[i];\n      let len:number = dist(p.x, p.y, tx, ty);\n      let ang:number = Math.atan2(ty-p.y, tx-p.x);\n\n      da = ang-a;\n\n      if (da>Math.PI)  da-=2*Math.PI;\n      if (da<-Math.PI) da+=2*Math.PI;\n\n      if (da>SaclaySlitherGame.MAX_TURN) {\n        da = SaclaySlitherGame.MAX_TURN;\n      } else if (da<-SaclaySlitherGame.MAX_TURN) {\n        da = -SaclaySlitherGame.MAX_TURN;\n      }\n\n      if (len > tlen) {\n        p.x = tx-tlen*Math.cos(a+da)+Math.sin(alph*2.0)/12.0*tlen*Math.sin(a+da);\n        p.y = ty-tlen*Math.sin(a+da)-Math.sin(alph*2.0)/12.0*tlen*Math.cos(a+da);\n      }\n      tx   = p.x;\n      ty   = p.y;\n      a    = ang;\n      tlen = SaclaySlitherGame.SPACEBETWEENSEGMENTS+2*Math.sin(alph);\n    }\n    this.dAlph += 0.02*this.speed;\n  }\n\n\n\n  testCollision(foodUpdate:number[]):boolean {\n    let p0:Point = this.pos[0];\n    let pn:Point = this.pos[this.pos.length-1];\n\n    this.closestSnake     = null;\n    this.closestSnakeP    = null;\n    this.closestBadSnake  = null;\n    this.closestBadSnakeP = null;\n    this.dclosestBadSnake = SaclaySlitherGame.WORLDRADIUS;\n    this.dclosestSnake    = SaclaySlitherGame.WORLDRADIUS;\n\n    // snake reach the end of the world\n    if(dist(0,0,p0.x,p0.y)>SaclaySlitherGame.WORLDRADIUS){\n      return true;\n    }\n\n    for (let i:number=0; i<this.ssg.snakes.length; i++) {\n      let other:Snake = this.ssg.snakes[i]!;\n      if (other!=null && other!=this) {\n        for (let k=0; k<other.pos.length; k++) {\n          let p:Point = other.pos[k];\n          let dd = dist(p.x, p.y, p0.x, p0.y);\n          if (dd<p0.rd+p.rd) {\n            return true;\n          } else {\n            if (this.closestSnake==null || dd<this.dclosestSnake){\n              this.closestSnake  = other;\n              this.closestSnakeP = p;\n              this.dclosestSnake = dd;\n            }\n\n            let a1 = Math.atan2(this.dirY, this.dirX);\n            let a2 = Math.atan2(p.y-p0.y, p.x-p0.x);\n            let da = Math.abs(a1-a2);\n            if ((this.closestBadSnake==null || dd*Math.sin(da/2+1)<this.dclosestBadSnake) ){\n              this.closestBadSnake  = other;\n              this.closestBadSnakeP = p;\n              this.dclosestBadSnake = dd*Math.sin(da/2+1);\n            }\n          }\n        }\n      }\n    }\n    let minR = this.speed*Math.sin(Math.PI/2-SaclaySlitherGame.MAX_TURN)/Math.sin(Math.PI-2*SaclaySlitherGame.MAX_TURN);\n    let n    = dist(0,0,this.dirX, this.dirY);\n    let lx   = p0.x+this.dirY*minR/n;\n    let ly   = p0.y-this.dirX*minR/n;\n    let rx   = p0.x-this.dirY*minR/n;\n    let ry   = p0.y+this.dirX*minR/n;\n\n    this.closestFood   = null;\n    this.bestFood      = null;\n    this.dclosestFood  = SaclaySlitherGame.WORLDRADIUS;\n    for (let k=this.ssg.foods.length-1; k>=0; k--) {\n      let f:Food = this.ssg.foods[k];\n      let dd = dist(p0.x, p0.y, f.x, f.y);\n      let a = Math.atan2(f.y-p0.y, f.x-p0.x);\n\n      let dl = dist(lx, ly, f.x, f.y);\n      let dr = dist(rx, ry, f.x, f.y);\n      // miam miam le serpent mange la nourriture\n      if (dd < p0.rd+f.rd) {\n        this.setWeight(this.weight +Math.round(f.rd));\n        if (4+Math.sqrt(this.weight)/10.0+this.weight/25.0>this.size) {\n          this.size++;\n          let p = new Point(pn.x, pn.y);\n          p.rd= 8;\n          this.pos.push(p);\n        }\n\n        //this.ssg.foods.splice(k,1);\n        this.ssg.foods[k].rd = 0;\n        foodUpdate.push(k);\n      } else {\n        if ((this.closestFood==null || dd<this.dclosestFood)&&(dl>minR && dr>minR)){\n          this.closestFood  = f;\n          this.dclosestFood = dd;\n        }\n        if ((this.bestFood==null || dd/f.rd<this.dbestFood)&&(dl>minR && dr>minR)){\n          this.bestFood  = f;\n          this.dbestFood = dd/f.rd;\n        }\n      }\n    }\n    return false;\n  }\n\n}\n","!function(e,t){\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports&&module.exports?module.exports=t():e.Quadtree=t()}(this,function(){return function(){function e(t){var n,i;if(this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height,this.maxElements=t.maxElements,null==this.width||null==this.height)throw new Error(\"Missing quadtree dimensions.\");if(null==this.x&&(this.x=0),null==this.y&&(this.y=0),null==this.maxElements&&(this.maxElements=1),this.contents=[],this.oversized=[],this.size=0,this.width<1||this.height<1)throw new Error(\"Dimensions must be positive integers.\");if(!Number.isInteger(this.x)||!Number.isInteger(this.y))throw new Error(\"Coordinates must be integers\");if(this.maxElements<1)throw new Error(\"The maximum number of elements before a split must be a positive integer.\");i=this,this.children={NW:{create:function(){return new e({x:i.x,y:i.y,width:Math.max(Math.floor(i.width/2),1),height:Math.max(Math.floor(i.height/2),1),maxElements:i.maxElements})},tree:null},NE:{create:function(){return new e({x:i.x+Math.max(Math.floor(i.width/2),1),y:i.y,width:Math.ceil(i.width/2),height:Math.max(Math.floor(i.height/2),1),maxElements:i.maxElements})},tree:null},SW:{create:function(){return new e({x:i.x,y:i.y+Math.max(Math.floor(i.height/2),1),width:Math.max(Math.floor(i.width/2),1),height:Math.ceil(i.height/2),maxElements:i.maxElements})},tree:null},SE:{create:function(){return new e({x:i.x+Math.max(Math.floor(i.width/2),1),y:i.y+Math.max(Math.floor(i.height/2),1),width:Math.ceil(i.width/2),height:Math.ceil(i.height/2),maxElements:i.maxElements})},tree:null}};for(n in this.children)this.children[n].get=function(){return null!=this.tree?this.tree:(this.tree=this.create(),this.tree)}}var t,n,i,r,h,l,o,s;return r=function(e){var t,n;return{x:Math.floor((null!=(t=e.width)?t:1)/2)+e.x,y:Math.floor((null!=(n=e.height)?n:1)/2)+e.y}},t=function(e,t){var n,i,r,h;return!(e.x>=t.x+(null!=(n=t.width)?n:1)||e.x+(null!=(i=e.width)?i:1)<=t.x||e.y>=t.y+(null!=(r=t.height)?r:1)||e.y+(null!=(h=e.height)?h:1)<=t.y)},n=function(e,t){var n;return n=r(t),e.x<n.x?e.y<n.y?\"NW\":\"SW\":e.y<n.y?\"NE\":\"SE\"},s=function(e){if(\"object\"!=typeof e)throw new Error(\"Element must be an Object.\");if(null==e.x||null==e.y)throw new Error(\"Coordinates properties are missing.\");if((null!=e?e.width:void 0)<0||(null!=e?e.height:void 0)<0)throw new Error(\"Width and height must be positive integers.\")},l=function(e){var t,n,i,r;return n=Math.max(Math.floor(e.width/2),1),i=Math.ceil(e.width/2),r=Math.max(Math.floor(e.height/2),1),t=Math.ceil(e.height/2),{NW:{x:e.x,y:e.y,width:n,height:r},NE:{x:e.x+n,y:e.y,width:i,height:r},SW:{x:e.x,y:e.y+r,width:n,height:t},SE:{x:e.x+n,y:e.y+r,width:i,height:t}}},i=function(e,n){var i,r,h,o;o=[],h=l(n);for(r in h)i=h[r],t(e,i)&&o.push(r);return o},h=function(e,t){var n;return(n=function(n){return e[\"_\"+n]=e[n],Object.defineProperty(e,n,{set:function(e){return t.remove(this,!0),this[\"_\"+n]=e,t.push(this)},get:function(){return this[\"_\"+n]},configurable:!0})})(\"x\"),n(\"y\"),n(\"width\"),n(\"height\")},o=function(e){var t;return(t=function(t){if(null!=e[\"_\"+t])return delete e[t],e[t]=e[\"_\"+t],delete e[\"_\"+t]})(\"x\"),t(\"y\"),t(\"width\"),t(\"height\")},e.prototype.clear=function(){var e,t;this.contents=[],this.oversized=[],this.size=0,t=[];for(e in this.children)t.push(this.children[e].tree=null);return t},e.prototype.push=function(e,t){return this.pushAll([e],t)},e.prototype.pushAll=function(e,t){var n,r,l,o,u,f,c,d,a,g,p,m,x,y,v,w,E,z,M,b;for(p=0,y=e.length;p<y;p++)g=e[p],s(g),t&&h(g,this);for(c=[{tree:this,elements:e}];c.length>0;){for(b=(E=c.shift()).tree,d={NW:null,NE:null,SW:null,SE:null},m=0,v=(f=E.elements).length;m<v;m++)if(u=f[m],b.size++,1!==(a=i(u,b)).length||1===b.width||1===b.height)b.oversized.push(u);else if(b.size-b.oversized.length<=b.maxElements)b.contents.push(u);else{for(o=a[0],M=b.children[o],null==d[o]&&(d[o]={tree:M.get(),elements:[]}),d[o].elements.push(u),x=0,w=(z=b.contents).length;x<w;x++)r=z[x],null==d[l=i(r,b)[0]]&&(d[l]={tree:b.children[l].get(),elements:[]}),d[l].elements.push(r);b.contents=[]}for(o in d)null!=(n=d[o])&&c.push(n)}return this},e.prototype.remove=function(e,t){var i,r;return s(e),(i=this.oversized.indexOf(e))>-1?(this.oversized.splice(i,1),this.size--,t||o(e),!0):(i=this.contents.indexOf(e))>-1?(this.contents.splice(i,1),this.size--,t||o(e),!0):!(null==(r=this.children[n(e,this)]).tree||!r.tree.remove(e,t)||(this.size--,0===r.tree.size&&(r.tree=null),0))},e.prototype.colliding=function(e,n){var r,h,l,o,u,f,c,d,a,g,p,m,x,y;for(null==n&&(n=t),s(e),u=[],l=[this];l.length>0;){for(f=0,a=(m=(y=l.shift()).oversized).length;f<a;f++)(h=m[f])!==e&&n(e,h)&&u.push(h);for(c=0,g=(x=y.contents).length;c<g;c++)(h=x[c])!==e&&n(e,h)&&u.push(h);for(0===(o=i(e,y)).length&&(o=[],e.x>=y.x+y.width&&o.push(\"NE\"),e.y>=y.y+y.height&&o.push(\"SW\"),o.length>0&&(1===o.length?o.push(\"SE\"):o=[\"SE\"])),d=0,p=o.length;d<p;d++)r=o[d],null!=y.children[r].tree&&l.push(y.children[r].tree)}return u},e.prototype.onCollision=function(e,n,r){var h,l,o,u,f,c,d,a,g,p,m,x,y;for(null==r&&(r=t),s(e),o=[this];o.length>0;){for(f=0,a=(m=(y=o.shift()).oversized).length;f<a;f++)(l=m[f])!==e&&r(e,l)&&n(l);for(c=0,g=(x=y.contents).length;c<g;c++)(l=x[c])!==e&&r(e,l)&&n(l);for(0===(u=i(e,y)).length&&(u=[],e.x>=y.x+y.width&&u.push(\"NE\"),e.y>=y.y+y.height&&u.push(\"SW\"),u.length>0&&(1===u.length?u.push(\"SE\"):u=[\"SE\"])),d=0,p=u.length;d<p;d++)h=u[d],null!=y.children[h].tree&&o.push(y.children[h].tree)}return null},e.prototype.get=function(e){return this.where(e)},e.prototype.where=function(e){var t,i,r,h,l,o,u,f,c,d,a,g,p;if(\"object\"==typeof e&&(null==e.x||null==e.y))return this.find(function(t){var n,i;n=!0;for(i in e)e[i]!==t[i]&&(n=!1);return n});for(s(e),h=[],r=[this];r.length>0;){for(l=0,f=(d=(p=r.shift()).oversized).length;l<f;l++){i=d[l],t=!0;for(u in e)e[u]!==i[u]&&(t=!1);t&&h.push(i)}for(o=0,c=(a=p.contents).length;o<c;o++){i=a[o],t=!0;for(u in e)e[u]!==i[u]&&(t=!1);t&&h.push(i)}null!=(g=p.children[n(e,p)]).tree&&r.push(g.tree)}return h},e.prototype.each=function(e){var t,n,i,r,h,l,o,s,u,f;for(n=[this];n.length>0;){for(r=0,l=(s=(f=n.shift()).oversized).length;r<l;r++)i=s[r],\"function\"==typeof e&&e(i);for(h=0,o=(u=f.contents).length;h<o;h++)i=u[h],\"function\"==typeof e&&e(i);for(t in f.children)null!=f.children[t].tree&&n.push(f.children[t].tree)}return this},e.prototype.find=function(e){var t,n,i,r,h,l,o,s,u,f,c;for(n=[this],r=[];n.length>0;){for(h=0,o=(u=(c=n.shift()).oversized).length;h<o;h++)i=u[h],(\"function\"==typeof e?e(i):void 0)&&r.push(i);for(l=0,s=(f=c.contents).length;l<s;l++)i=f[l],(\"function\"==typeof e?e(i):void 0)&&r.push(i);for(t in c.children)null!=c.children[t].tree&&n.push(c.children[t].tree)}return r},e.prototype.filter=function(t){var n;return(n=function(i){var r,h,l,o,s,u,f,c,d,a,g;(h=new e({x:i.x,y:i.y,width:i.width,height:i.height,maxElements:i.maxElements})).size=0;for(r in i.children)null!=i.children[r].tree&&(h.children[r].tree=n(i.children[r].tree),h.size+=null!=(c=null!=(d=h.children[r].tree)?d.size:void 0)?c:0);for(o=0,u=(a=i.oversized).length;o<u;o++)l=a[o],(null==t||(\"function\"==typeof t?t(l):void 0))&&h.oversized.push(l);for(s=0,f=(g=i.contents).length;s<f;s++)l=g[s],(null==t||(\"function\"==typeof t?t(l):void 0))&&h.contents.push(l);return h.size+=h.oversized.length+h.contents.length,0===h.size?null:h})(this)},e.prototype.reject=function(e){return this.filter(function(t){return!(\"function\"==typeof e?e(t):void 0)})},e.prototype.visit=function(e){var t,n,i;for(n=[this];n.length>0;){i=n.shift(),e.bind(i)();for(t in i.children)null!=i.children[t].tree&&n.push(i.children[t].tree)}return this},e.prototype.pretty=function(){var e,t,n,i,r,h,l;for(h=\"\",n=function(e){var t,n,i;for(i=\"\",t=n=e;n<=0?t<0:t>0;n<=0?++t:--t)i+=\"   \";return i},t=[{label:\"ROOT\",tree:this,level:0}];t.length>0;){h+=(i=n((l=t.shift()).level))+\"| \"+l.label+\"\\n\"+i+\"| ------------\\n\",l.tree.oversized.length>0&&(h+=i+\"| * Oversized elements *\\n\"+i+\"|   \"+l.tree.oversized+\"\\n\"),l.tree.contents.length>0&&(h+=i+\"| * Leaf content *\\n\"+i+\"|   \"+l.tree.contents+\"\\n\"),r=!1;for(e in l.tree.children)null!=l.tree.children[e].tree&&(r=!0,t.unshift({label:e,tree:l.tree.children[e].tree,level:l.level+1}));r&&(h+=i+\"└──┐\\n\")}return h},e}()});\n//# sourceMappingURL=quadtree.min.js.map\n","'use strict';\n\nconst EventEmitter = require('events');\nconst crypto = require('crypto');\nconst http = require('http');\nconst url = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst extension = require('./extension');\nconst constants = require('./constants');\nconst WebSocket = require('./websocket');\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {String} options.host The hostname where to bind the server\n   * @param {Number} options.port The port where to bind the server\n   * @param {http.Server} options.server A pre-created HTTP/S server to use\n   * @param {Function} options.verifyClient An hook to reject connections\n   * @param {Function} options.handleProtocols An hook to handle protocols\n   * @param {String} options.path Accept only connections matching this path\n   * @param {Boolean} options.noServer Enable no server mode\n   * @param {Boolean} options.clientTracking Specifies whether or not to track clients\n   * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable permessage-deflate\n   * @param {Number} options.maxPayload The maximum allowed message size\n   * @param {Function} callback A listener for the `listening` event\n   */\n  constructor (options, callback) {\n    super();\n\n    options = Object.assign({\n      maxPayload: 100 * 1024 * 1024,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null\n    }, options);\n\n    if (options.port == null && !options.server && !options.noServer) {\n      throw new TypeError(\n        'One of the \"port\", \"server\", or \"noServer\" options must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(options.port, options.host, options.backlog, callback);\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, (ws) => {\n            this.emit('connection', ws, req);\n          });\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) this.clients = new Set();\n    this.options = options;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address () {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Close the server.\n   *\n   * @param {Function} cb Callback\n   * @public\n   */\n  close (cb) {\n    //\n    // Terminate all associated clients.\n    //\n    if (this.clients) {\n      for (const client of this.clients) client.terminate();\n    }\n\n    const server = this._server;\n\n    if (server) {\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // Close the http server if it was internally created.\n      //\n      if (this.options.port != null) return server.close(cb);\n    }\n\n    if (cb) cb();\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle (req) {\n    if (this.options.path && url.parse(req.url).pathname !== this.options.path) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade (req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const version = +req.headers['sec-websocket-version'];\n    const extensions = {};\n\n    if (\n      req.method !== 'GET' || req.headers.upgrade.toLowerCase() !== 'websocket' ||\n      !req.headers['sec-websocket-key'] || (version !== 8 && version !== 13) ||\n      !this.shouldHandle(req)\n    ) {\n      return abortHandshake(socket, 400);\n    }\n\n    if (this.options.perMessageDeflate) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(\n          req.headers['sec-websocket-extensions']\n        );\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        return abortHandshake(socket, 400);\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin: req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.connection.authorized || req.connection.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(extensions, req, socket, head, cb);\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {http.IncomingMessage} req The request object\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @private\n   */\n  completeUpgrade (extensions, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    const key = crypto.createHash('sha1')\n      .update(req.headers['sec-websocket-key'] + constants.GUID, 'binary')\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${key}`\n    ];\n\n    const ws = new WebSocket(null);\n    var protocol = req.headers['sec-websocket-protocol'];\n\n    if (protocol) {\n      protocol = protocol.trim().split(/ *, */);\n\n      //\n      // Optionally call external protocol selection handler.\n      //\n      if (this.options.handleProtocols) {\n        protocol = this.options.handleProtocols(protocol, req);\n      } else {\n        protocol = protocol[0];\n      }\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws.protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, this.options.maxPayload);\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => this.clients.delete(ws));\n    }\n\n    cb(ws);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when called\n * @private\n */\nfunction addListeners (server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners () {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Handle premature socket errors.\n *\n * @private\n */\nfunction socketOnError () {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {net.Socket} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake (socket, code, message, headers) {\n  if (socket.writable) {\n    message = message || http.STATUS_CODES[code];\n    headers = Object.assign({\n      'Connection': 'close',\n      'Content-type': 'text/html',\n      'Content-Length': Buffer.byteLength(message)\n    }, headers);\n\n    socket.write(\n      `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n      Object.keys(headers).map(h => `${h}: ${headers[h]}`).join('\\r\\n') +\n      '\\r\\n\\r\\n' +\n      message\n    );\n  }\n\n  socket.removeListener('error', socketOnError);\n  socket.destroy();\n}\n","/*!\n * UTF-8 validate: UTF-8 validation for WebSockets.\n * Copyright(c) 2015 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nconst isValidUTF8 = (buf) => {\n  var len = buf.length;\n  var i = 0;\n\n  while (i < len) {\n    if (buf[i] < 0x80) {  // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {  // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0  // overlong\n      ) {\n        return false;\n      } else {\n        i += 2;\n      }\n    } else if ((buf[i] & 0xf0) === 0xe0) {  // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80 ||  // overlong\n        buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0     // surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      } else {\n        i += 3;\n      }\n    } else if ((buf[i] & 0xf8) === 0xf0) {  // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80 ||  // overlong\n        buf[i] === 0xf4 && buf[i + 1] > 0x8f || buf[i] > 0xf4  // > U+10FFFF\n      ) {\n        return false;\n      } else {\n        i += 4;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nmodule.exports = isValidUTF8;\n","'use strict';\n\ntry {\n  module.exports = require('bindings')('validation');\n} catch (e) {\n  module.exports = require('./fallback');\n}\n","module.exports = require(\"stream\");","'use strict';\n\n/**\n * Class representing an event.\n *\n * @private\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} target A reference to the target to which the event was dispatched\n   */\n  constructor (type, target) {\n    this.target = target;\n    this.type = type;\n  }\n}\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n * @private\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The received data\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor (data, target) {\n    super('message', target);\n\n    this.data = data;\n  }\n}\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n * @private\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {Number} code The status code explaining why the connection is being closed\n   * @param {String} reason A human-readable string explaining why the connection is closing\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor (code, reason, target) {\n    super('close', target);\n\n    this.wasClean = target._closeFrameReceived && target._closeFrameSent;\n    this.reason = reason;\n    this.code = code;\n  }\n}\n\n/**\n * Class representing an open event.\n *\n * @extends Event\n * @private\n */\nclass OpenEvent extends Event {\n  /**\n   * Create a new `OpenEvent`.\n   *\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor (target) {\n    super('open', target);\n  }\n}\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n * @private\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {Object} error The error that generated this event\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor (error, target) {\n    super('error', target);\n\n    this.message = error.message;\n    this.error = error;\n  }\n}\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} method A string representing the event type to listen for\n   * @param {Function} listener The listener to add\n   * @public\n   */\n  addEventListener (method, listener) {\n    if (typeof listener !== 'function') return;\n\n    function onMessage (data) {\n      listener.call(this, new MessageEvent(data, this));\n    }\n\n    function onClose (code, message) {\n      listener.call(this, new CloseEvent(code, message, this));\n    }\n\n    function onError (error) {\n      listener.call(this, new ErrorEvent(error, this));\n    }\n\n    function onOpen () {\n      listener.call(this, new OpenEvent(this));\n    }\n\n    if (method === 'message') {\n      onMessage._listener = listener;\n      this.on(method, onMessage);\n    } else if (method === 'close') {\n      onClose._listener = listener;\n      this.on(method, onClose);\n    } else if (method === 'error') {\n      onError._listener = listener;\n      this.on(method, onError);\n    } else if (method === 'open') {\n      onOpen._listener = listener;\n      this.on(method, onOpen);\n    } else {\n      this.on(method, listener);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} method A string representing the event type to remove\n   * @param {Function} listener The listener to remove\n   * @public\n   */\n  removeEventListener (method, listener) {\n    const listeners = this.listeners(method);\n\n    for (var i = 0; i < listeners.length; i++) {\n      if (listeners[i] === listener || listeners[i]._listener === listener) {\n        this.removeListener(method, listeners[i]);\n      }\n    }\n  }\n};\n\nmodule.exports = EventTarget;\n","/*!\n * bufferutil: WebSocket buffer utils\n * Copyright(c) 2015 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nconst mask = (source, mask, output, offset, length) => {\n  for (var i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n};\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nconst unmask = (buffer, mask) => {\n  // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n  const length = buffer.length;\n  for (var i = 0; i < length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n};\n\nmodule.exports = { mask, unmask };\n","module.exports = require(\"fs\");","'use strict';\n\ntry {\n  module.exports = require('bindings')('bufferutil');\n} catch (e) {\n  module.exports = require('./fallback');\n}\n","module.exports = require(\"zlib\");","'use strict';\n\nfunction Queue(options) {\n  if (!(this instanceof Queue)) {\n    return new Queue(options);\n  }\n\n  options = options || {};\n  this.concurrency = options.concurrency || Infinity;\n  this.pending = 0;\n  this.jobs = [];\n  this.cbs = [];\n  this._done = done.bind(this);\n}\n\nvar arrayAddMethods = [\n  'push',\n  'unshift',\n  'splice'\n];\n\narrayAddMethods.forEach(function(method) {\n  Queue.prototype[method] = function() {\n    var methodResult = Array.prototype[method].apply(this.jobs, arguments);\n    this._run();\n    return methodResult;\n  };\n});\n\nObject.defineProperty(Queue.prototype, 'length', {\n  get: function() {\n    return this.pending + this.jobs.length;\n  }\n});\n\nQueue.prototype._run = function() {\n  if (this.pending === this.concurrency) {\n    return;\n  }\n  if (this.jobs.length) {\n    var job = this.jobs.shift();\n    this.pending++;\n    job(this._done);\n    this._run();\n  }\n\n  if (this.pending === 0) {\n    while (this.cbs.length !== 0) {\n      var cb = this.cbs.pop();\n      process.nextTick(cb);\n    }\n  }\n};\n\nQueue.prototype.onDone = function(cb) {\n  if (typeof cb === 'function') {\n    this.cbs.push(cb);\n    this._run();\n  }\n};\n\nfunction done() {\n  this.pending--;\n  this._run();\n}\n\nmodule.exports = Queue;\n","module.exports = require(\"tls\");","module.exports = require(\"net\");","module.exports = require(\"https\");","'use strict';\n\nconst WebSocket = require('./lib/websocket');\n\nWebSocket.Server = require('./lib/websocket-server');\nWebSocket.Receiver = require('./lib/receiver');\nWebSocket.Sender = require('./lib/sender');\n\nmodule.exports = WebSocket;\n","import {Point, Food, Snake} from './Snake';\nimport {dist} from './util';\nimport {SaclaySlitherGame} from './SaclaySlitherGame';\nimport * as WebSocket from 'ws';\n\nexport class NetworkSnake extends Snake {\n  ws: WebSocket;\n  lastDirX : number;\n  lastDirY : number;\n\n  constructor(ssg0:   SaclaySlitherGame,\n              name0:  string,\n              weight0:number,\n              x0:     number,\n              y0:     number,\n              type0:  number,\n              dirX0:  number,\n              dirY0:  number,\n              state0: number,\n              ws0:    WebSocket) {\n    super(ssg0, name0, weight0, x0, y0, type0, dirX0, dirY0, state0);\n\n    this.ws = ws0;\n\n    this.lastDirX = dirX0;\n    this.lastDirY = dirY0;\n  }\n}\n","//require ('./Snake')\nimport {Point, Food, Snake, SnakeStrategy} from './Snake';\nimport {NetworkSnake} from './NetworkSnake';\nimport {SaclaySlitherGame} from './SaclaySlitherGame';\n\nimport http = require('http');\n\nimport * as WebSocket from 'ws';\n\nlet Quadtree = require(\"quadtree-lib\")\n\nconsole.log(\"TS server launching ... \"+SaclaySlitherGame.WORLDRADIUS)\n\nlet wsServer = new WebSocket.Server({ port: 9090 });\n\nlet ctrlSnake:{ [ip: string]: NetworkSnake; }   = {};\nlet ssg0:SaclaySlitherGame = new SaclaySlitherGame();\nlet serverTime = 0;\nlet timer:NodeJS.Timer|null;\nlet foodUpdate:{[index:number]: number[]}\n\n\n\nfunction initGame(){\n  ssg0 = new SaclaySlitherGame();\n\n  for (let k:number=0; k<SaclaySlitherGame.NBINITIALFOODS; k++) {\n    let f:Food = Food.newFood(ssg0);\n    ssg0.foods.push(f);\n  }\n\n  for (let k:number=0; k<SaclaySlitherGame.NBINITIALSNAKES; k++) {\n    ssg0.snakes[k] = new Snake(ssg0, ssg0.names[k%ssg0.names.length], Math.max(40, 400+50*(k-1)),\n      SaclaySlitherGame.WORLDRADIUS/2+Math.floor(900*Math.cos(k*2*Math.PI/SaclaySlitherGame.NBINITIALSNAKES)),\n      SaclaySlitherGame.WORLDRADIUS/2+Math.floor(900*Math.sin(k*2*Math.PI/SaclaySlitherGame.NBINITIALSNAKES)),\n      k%SaclaySlitherGame.colors.length,\n      Math.floor((SaclaySlitherGame.SPACEBETWEENSEGMENTS)*Math.cos(k*2*Math.PI/SaclaySlitherGame.NBINITIALSNAKES)),\n      Math.floor((SaclaySlitherGame.SPACEBETWEENSEGMENTS)*Math.sin(k*2*Math.PI/SaclaySlitherGame.NBINITIALSNAKES)),\n      SnakeStrategy.GOBESTFOOD);\n  }\n  console.log(\"INI \"+ssg0.snakes[10]!.name+\" \"+ssg0.snakes[10]!.pos[0].x.toFixed(2)+\" \"+ssg0.snakes[10]!.pos[0].y.toFixed(2)\n                                          +\" \"+ssg0.snakes[10]!.pos[1].x.toFixed(2)+\" \"+ssg0.snakes[10]!.pos[1].y.toFixed(2)\n                                          +\" \"+ssg0.snakes[10]!.pos[2].x.toFixed(2)+\" \"+ssg0.snakes[10]!.pos[2].y.toFixed(2)+\"...\"\n                                          +\" \"+ssg0.snakes[10]!.pos[ssg0.snakes[10]!.pos.length-1].x.toFixed(2)+\" \"+ssg0.snakes[10]!.pos[ssg0.snakes[10]!.pos.length-1].y.toFixed(2))\n}\n\n\n\nfunction updateSnakes(){\n  serverTime++;\n  console.log(\"AV \"+ssg0.snakes[10]!.name+\" \"+ssg0.snakes[10]!.pos[0].x.toFixed(2)+\",\"+ssg0.snakes[10]!.pos[0].y.toFixed(2)\n                                         +\" \"+ssg0.snakes[10]!.pos[1].x.toFixed(2)+\",\"+ssg0.snakes[10]!.pos[1].y.toFixed(2)\n                                         +\" \"+ssg0.snakes[10]!.pos[2].x.toFixed(2)+\",\"+ssg0.snakes[10]!.pos[2].y.toFixed(2)+\"...\"\n                                         +\" \"+ssg0.snakes[10]!.pos[ssg0.snakes[10]!.pos.length-1].x.toFixed(2)+\" \"+ssg0.snakes[10]!.pos[ssg0.snakes[10]!.pos.length-1].y.toFixed(2)+\n                                         \" ===> \"+ssg0.snakes[10]!.dirX.toFixed(2)+\",\"+ssg0.snakes[10]!.dirY.toFixed(2))\n\n  // a new array to contain oll the food updates\n  foodUpdate[serverTime] = [];\n\n  for (let k=0; k<ssg0.snakes.length; k++){\n    if (ssg0.snakes[k] instanceof NetworkSnake) {\n      let snake = <NetworkSnake>ssg0.snakes[k];\n      snake.lastDirX = ssg0.snakes[k]!.dirX;\n      snake.lastDirY = ssg0.snakes[k]!.dirY;\n\n      snake.moveSnake(snake.dirX, snake.dirY);\n      //console.log(\"  \"+snake.name+\"@\"+snake.pos[0].x.toFixed(2)+\",\"+snake.pos[0].y.toFixed(2)+\" MOVED TOWARD \"+snake.lastDirX.toFixed(2)+\",\"+snake.lastDirY.toFixed(2)+\" AND NOW WILL MOVE TOWARD \"+ssg0.snakes[k]!.dirX.toFixed(2)+\",\"+ssg0.snakes[k]!.dirY.toFixed(2))\n\n      if (snake.ws.readyState==WebSocket.OPEN)snake.ws.send(\"MOVE \"+snake.pos[0].x+\" \"+snake.pos[0].y+\" \"+snake.lastDirX+\" \"+snake.lastDirY);\n\n    } else if (ssg0.snakes[k]) {\n      //let x  = ssg0.snakes[k]!.pos[0].x;\n      //let y  = ssg0.snakes[k]!.pos[0].y;\n      //ssg0.snakes[k]!.moveSnake(ssg0.snakes[k]!.dirX, ssg0.snakes[k]!.dirY);\n      let dx = ssg0.snakes[k]!.dirX;\n      let dy = ssg0.snakes[k]!.dirY;\n      let x  = ssg0.snakes[k]!.pos[0].x;\n      let y  = ssg0.snakes[k]!.pos[0].y;\n      let dd = Math.hypot(x, y);\n\n      let ndx = (10+Math.random()*5)*dx + (Math.random()*16-8)*dy;\n      let ndy = (10+Math.random()*5)*dy - (Math.random()*16-8)*dx;\n\n      if (dd>1000) {\n        ndx += -x*(dd-1000)/dd;\n        ndy += -y*(dd-1000)/dd;\n      }\n\n      if (ssg0.snakes[k]!.state==SnakeStrategy.AVOIDBORDER && ssg0.snakes[k]!.closestSnakeP!=null){\n        let d = Math.hypot(x, y);\n        let ddx = -x/d*20;\n        let ddy = -y/d*20;\n        let dda = Math.atan2(ddy, ddx);\n        ssg0.snakes[k]!.moveSnake( x+20*Math.cos(dda), y+20*Math.sin(dda));\n      } else if (ssg0.snakes[k]!.state==SnakeStrategy.AVOIDCLOSEST && ssg0.snakes[k]!.closestSnakeP!=null){\n        let p = ssg0.snakes[k]!.closestSnakeP!;\n        let ddx = x-p.x;\n        let ddy = y-p.y;\n        let dda = Math.atan2(ddy, ddx);\n        ssg0.snakes[k]!.moveSnake(x+20*Math.cos(dda), y+20*Math.sin(dda));\n      } else if (ssg0.snakes[k]!.state==SnakeStrategy.AVOIDWORST && ssg0.snakes[k]!.closestBadSnakeP!=null){\n        let p = ssg0.snakes[k]!.closestBadSnakeP!;\n        let ddx = x-p.x;\n        let ddy = y-p.y;\n        let dda = Math.atan2(ddy, ddx);\n        ssg0.snakes[k]!.moveSnake(x+20*Math.cos(dda), y+20*Math.sin(dda));\n      } else if (ssg0.snakes[k]!.state==SnakeStrategy.GOBESTFOOD && ssg0.snakes[k]!.bestFood!=null){\n        let f = ssg0.snakes[k]!.bestFood!;\n        //console.log(k+\"_\"+snakes[k].name+\" @\"+x+\",\"+y+\" goes to \"+f.x+\", \"+f.y);\n        ssg0.snakes[k]!.moveSnake( f.x, f.y);\n      } else if (ssg0.snakes[k]!.state==SnakeStrategy.GOCLOSESTFOOD && ssg0.snakes[k]!.closestFood!=null){\n        let f = ssg0.snakes[k]!.closestFood!;\n        //console.log(k+\"_\"+snakes[k].name+\" @\"+x+\",\"+y+\" goes to \"+f.x+\", \"+f.y);\n        ssg0.snakes[k]!.moveSnake( f.x, f.y);\n      } else if (ssg0.snakes[k]!.state==SnakeStrategy.FASTSTRAIGHT){\n        if (ssg0.snakes[k]!.speed<SaclaySlitherGame.MAX_SPEED && ssg0.snakes[k]!.weight>40+SaclaySlitherGame.LOOSEWEIGHT)\n          ssg0.snakes[k]!.speed=SaclaySlitherGame.MAX_SPEED;\n        ssg0.snakes[k]!.moveSnake( x+dx, y+dy);\n      } else if (ssg0.snakes[k]!.state==SnakeStrategy.ROT){\n        ssg0.snakes[k]!.moveSnake( x+ndx, y+ndy);\n      } else if (ssg0.snakes[k]!.state==SnakeStrategy.RANDWALK){\n        ssg0.snakes[k]!.moveSnake( x+10*dx-100*dy, y+10*dy+100*dx);\n      } else {\n        ssg0.snakes[k]!.moveSnake( x+dx, y+dy);\n        //console.log(k+\"_\"+snakes[k].name+\" is lost !!! \");\n      }\n\n\n      if (ssg0.snakes[k]!.testCollision(foodUpdate[serverTime])) {\n        console.log(ssg0.snakes[k]!.name+\" is dead\");\n        for (let i=0; i<ssg0.snakes[k]!.pos.length; i++) {\n          let p = ssg0.snakes[k]!.pos[i];\n          let f = new Food(p.x, p.y, 0);\n          f.rd = 10;\n          if (i%2==0) ssg0.foods.push(f);\n        }\n        let a = Math.random()*2*Math.PI;\n        let d = Math.random()*SaclaySlitherGame.WORLDRADIUS;\n\n        ssg0.snakes[k] = new Snake(ssg0, ssg0.names[k%ssg0.names.length], 40,\n                                   Math.floor(d*Math.cos(a)),\n                                   Math.floor(d*Math.sin(a)),\n                                   k%SaclaySlitherGame.colors.length,\n                                   10* Math.cos(k* Math.PI/3),\n                                   10* Math.sin(k* Math.PI/3),\n                                   SnakeStrategy.GOBESTFOOD);\n      }\n\n      //console.log(snakes[k].name+\" @ \"+snakes[k].state+\" cBSp=\"+snakes[k].closestBadSnakeP.x+\", \"+snakes[k].closestBadSnakeP.y);\n\n      // Apres le deplacement on evalue si c'est pas le bon moment de changer de strategie\n      if (ssg0.snakes[k]!.state!=SnakeStrategy.AVOIDBORDER) {\n        let h = ssg0.snakes[k]!.pos[0];\n        let d = Math.hypot(h.x, h.y);\n        if (d>SaclaySlitherGame.WORLDRADIUS-100)\n          ssg0.snakes[k]!.state=SnakeStrategy.AVOIDBORDER;/////\n      } else if (ssg0.snakes[k]!.state==SnakeStrategy.AVOIDBORDER) {\n        let h = ssg0.snakes[k]!.pos[0];\n        let d = Math.hypot(h.x, h.y);\n        if (d<SaclaySlitherGame.WORLDRADIUS-200)\n          ssg0.snakes[k]!.state=SnakeStrategy.GOBESTFOOD;/////\n      } else if (ssg0.snakes[k]!.state==SnakeStrategy.AVOIDWORST && ssg0.snakes[k]!.closestBadSnakeP!=null){\n        let p = ssg0.snakes[k]!.closestBadSnakeP!;\n        let d = ssg0.snakes[k]!.dclosestBadSnake;\n        console.log(ssg0.snakes[k]!.name+\" would not be affraid anymore if sketch.dist to \"+ssg0.snakes[k]!.closestBadSnake!.name+\" =\"+d+\">400   p=\"+p.x+\",\"+p.y);\n        if (d>200){\n          ssg0.snakes[k]!.state=SnakeStrategy.GOBESTFOOD;/////\n          console.log(ssg0.snakes[k]!.name+\" is not affraid anymore\");\n        }\n      } else if (ssg0.snakes[k]!.state==SnakeStrategy.AVOIDCLOSEST && ssg0.snakes[k]!.closestSnakeP!=null){\n        let p =ssg0.snakes[k]!.closestSnakeP!;\n        if (ssg0.snakes[k]!.closestSnake==ssg0.snakes[0]!) console.log(ssg0.snakes[k]!.name+\" is affraid of me point[\"+k+\"]=\"+p.x+\",\"+p.y); //+\" sketch.dist=\"+dd +\"  DIFFANGLE=\"+da+\" => \"+(dd*sin(da/2+1))\n\n        let d = Math.hypot(p.x-x, p.y-y);\n        if (d>300)\n          ssg0.snakes[k]!.state=SnakeStrategy.GOBESTFOOD;/////\n      } else if (ssg0.snakes[k]!.state==SnakeStrategy.AVOIDWORST && ssg0.snakes[k]!.closestBadSnakeP==null){\n        ssg0.snakes[k]!.state=SnakeStrategy.GOBESTFOOD;/////\n        console.log(ssg0.snakes[k]!.name+\" is not affraid anymore\");\n      } else if (ssg0.snakes[k]!.state==SnakeStrategy.GOBESTFOOD && ssg0.snakes[k]!.closestBadSnakeP!=null){\n        let p = ssg0.snakes[k]!.closestBadSnakeP!;\n        let d = ssg0.snakes[k]!.dclosestBadSnake;\n        if (d<100){\n          console.log(ssg0.snakes[k]!.name+\" is now affraid of \"+ssg0.snakes[k]!.closestBadSnake!.name+\" because \"+d+\"<200  p=\"+p.x+\",\"+p.y);\n          ssg0.snakes[k]!.state=SnakeStrategy.AVOIDWORST;///\n        }\n      }\n    }\n  }\n  console.log(\"AP \"+ssg0.snakes[10]!.name+\" \"+ssg0.snakes[10]!.pos[0].x.toFixed(2)+\",\"+ssg0.snakes[10]!.pos[0].y.toFixed(2)\n                                         +\" \"+ssg0.snakes[10]!.pos[1].x.toFixed(2)+\",\"+ssg0.snakes[10]!.pos[1].y.toFixed(2)\n                                         +\" \"+ssg0.snakes[10]!.pos[2].x.toFixed(2)+\",\"+ssg0.snakes[10]!.pos[2].y.toFixed(2)+\"...\"\n                                         +\" \"+ssg0.snakes[10]!.pos[ssg0.snakes[10]!.pos.length-1].x.toFixed(2)+\" \"+ssg0.snakes[10]!.pos[ssg0.snakes[10]!.pos.length-1].y.toFixed(2)+\n                                         \" ===> \"+ssg0.snakes[10]!.dirX.toFixed(2)+\",\"+ssg0.snakes[10]!.dirY.toFixed(2))\n\n}\n\n\nwsServer.on('connection', (ws: WebSocket, req:http.IncomingMessage) => {\n\n  const ip:string = req.connection.remoteAddress!;\n  console.log((new Date()) + \" Connection accepted \"+ip);\n\n  ws.on('message', function(message:WebSocket.Data, type:string) {\n    //console.log(message+\" === \"+ typeof message);\n    if (typeof message === 'string') {\n      //console.log(\"Received utf8 Message : \" +message.utf8Data);\n      //console.log(message);\n      if ((<string>message).startsWith(\"Hello, I am \")){\n        let name = (<string>message).substring(12, (<string>message).indexOf(\";\"));\n        let team = (<string>message).substring((<string>message).indexOf(\";\")+1);\n\n        if (Object.keys(ctrlSnake).length ==0){\n          console.log(\"initGame \"+SaclaySlitherGame.WORLDRADIUS)\n          initGame();\n          //timer = <NodeJS.Timer>setInterval(updateSnakes, 20)\n        }\n\n        if (ctrlSnake[ip]){\n          ssg0.snakes.splice(ssg0.snakes.indexOf(ctrlSnake[ip]), 1);\n          delete ctrlSnake[ip];\n          console.log(ssg0.snakes.length+\"+1 snake renewed: \"+name)\n          ws.send(\"Hello back \"+name+\", I am the server: \"+ssg0.snakes.length+\"+1 snake renewed\");\n        } else {\n          console.log(ssg0.snakes.length+\"+1 snake: \"+name)\n          ws.send(\"Hello back \"+name+\", I am the server: \"+ssg0.snakes.length+\"+1 snake\");\n        }\n\n        ctrlSnake[ip] = new NetworkSnake(ssg0, name, 500, SaclaySlitherGame.WORLDRADIUS/2, SaclaySlitherGame.WORLDRADIUS/2, parseInt(team), 10, 0, SnakeStrategy.GOBESTFOOD, ws)\n        ssg0.snakes.push(ctrlSnake[ip]);\n      } else if ((<string>message).startsWith(\"pause\")){\n        if (timer!=null){\n          clearInterval(timer);\n          timer = null;\n          console.log(\"pause\")\n        } else\n          console.log(\"CANT PAUSE NON RUNNING GAME\")\n\n      } else if ((<string>message).startsWith(\"play\")){\n        if (timer!=null){\n          console.log(\"CANT RUN A RUNNING GAME\")\n        } else{\n          timer = <NodeJS.Timer>setInterval(updateSnakes, 20);\n          console.log(\"play\")\n        }\n      } else if ((<string>message).startsWith(\"reset\")){\n        if (timer!=null) clearInterval(timer);\n        initGame();\n        let type = ctrlSnake[ip].type;\n        let name = ctrlSnake[ip].name;\n        ctrlSnake[ip] = new NetworkSnake(ssg0, name, 500, SaclaySlitherGame.WORLDRADIUS/2, SaclaySlitherGame.WORLDRADIUS/2, type, 10, 0, SnakeStrategy.GOBESTFOOD, ws)\n      } else if ((<string>message).startsWith(\"update\")){\n        updateSnakes();\n      }\n    }\n    else if (typeof message === 'object') {\n\n      let data = <Buffer>message;\n      //console.log(\"Received Binary Message of \" + data.length + \" bytes\");\n      //console.log(message);\n\n      if (data.length==6*4) { // UPDATE\n        let arr:Float32Array = new Float32Array(2+ssg0.snakes.length*8)\n\n        let tx   = data.readFloatLE(0);\n        let ty   = data.readFloatLE(4);\n        ctrlSnake[ip].speed = data.readFloatLE(8);\n        let minx = data.readFloatLE(12);\n        let miny = data.readFloatLE(16);\n        let wh   = data.readFloatLE(20);\n\n        let px:number = 0;\n        let py:number = 0;\n\n        ctrlSnake[ip].dirX = tx;\n        ctrlSnake[ip].dirY = ty;\n\n        console.log(\"receive update from \"+ip+\" = \"+ctrlSnake[ip].name);\n\n\n        let p0x = ctrlSnake[ip].pos[0].x;\n        let p0y = ctrlSnake[ip].pos[0].y;\n        //console.log(\"NET REC:\"+ctrlSnake[ip].name+\"@\"+ctrlSnake[ip].pos[0].x.toFixed(2)+\",\"+ctrlSnake[ip].pos[0].y.toFixed(2)+\" MOVING TOWARD \"+tx.toFixed(2)+\",\"+ty.toFixed(2))\n        //console.log(\"PAN \"+minx.toFixed(2)+\",\"+miny.toFixed(2))\n\n        ctrlSnake[ip].dirX = tx;\n        ctrlSnake[ip].dirY = ty;\n\n        arr[0] = serverTime;\n        arr[1] = ssg0.snakes.length;\n\n        for (let k=0; k<ssg0.snakes.length; k++) {\n          arr[2+k*8+0] = ssg0.snakes[k]!.dirX;\n          arr[2+k*8+1] = ssg0.snakes[k]!.dirY;\n          arr[2+k*8+2] = ssg0.snakes[k]!.pos[0].x;\n          arr[2+k*8+3] = ssg0.snakes[k]!.pos[0].y;\n          arr[2+k*8+4] = ssg0.snakes[k]!.pos[ssg0.snakes[k]!.pos.length-1].x;\n          arr[2+k*8+5] = ssg0.snakes[k]!.pos[ssg0.snakes[k]!.pos.length-1].y;\n          arr[2+k*8+6] = ssg0.snakes[k]!.speed;\n          arr[2+k*8+7] = ssg0.snakes[k]!.weight;\n        }\n        ws.send(arr);\n      } else if (data.length==4*4) { // ALL SNAKES & FOOD\n        let sumSize = 0;\n        for (let k =0; k<ssg0.snakes.length; k++)\n          sumSize += ssg0.snakes[k]!.size\n\n        let arr:Float32Array = new Float32Array(3+ssg0.snakes.length*7+sumSize*2+ssg0.foods.length*3)\n\n        let x = data.readFloatLE(0);\n        let y = data.readFloatLE(4);\n        let w = data.readFloatLE(8);\n        let h = data.readFloatLE(12);\n\n        arr[0] = ssg0.snakes.length;\n        arr[1] = ssg0.foods.length;\n        arr[2] = sumSize;\n\n        let arrpos = 3;\n        for (let k =0; k<ssg0.snakes.length; k++) {\n          //console.log(k+\" => \"+ssg0.snakes[k]!.type+\" \"+ssg0.snakes[k]!.size)\n          arr[arrpos+0] = ssg0.snakes[k]!.size\n          arr[arrpos+1] = ssg0.snakes[k]!.weight\n          arr[arrpos+2] = ssg0.snakes[k]!.dirX\n          arr[arrpos+3] = ssg0.snakes[k]!.dirY\n\n          arr[arrpos+4] = ssg0.snakes[k]!.type\n          arr[arrpos+5] = ssg0.snakes[k]!.pos[0].x\n          arr[arrpos+6] = ssg0.snakes[k]!.pos[0].y\n          arrpos+=7;\n        }\n\n        for (let k =0; k<ssg0.snakes.length; k++) {\n          for (let l=0; l<ssg0.snakes[k]!.size; l++){\n            arr[arrpos+0] = ssg0.snakes[k]!.pos[l].x\n            arr[arrpos+1] = ssg0.snakes[k]!.pos[l].y\n            arrpos+=2\n          }\n        }\n        for (let k =0; k<ssg0.foods.length; k++) {\n          arr[arrpos+0] = ssg0.foods[k]!.x\n          arr[arrpos+1] = ssg0.foods[k]!.y\n          arr[arrpos+2] = ssg0.foods[k]!.rd\n          arrpos+=3\n        }\n        console.log(\"  sent \"+arrpos+\"%\"+arr.length)\n        console.log(\"=> \"+ssg0.snakes[10]!.name+\" \"+ssg0.snakes[10]!.pos[0].x.toFixed(2)+\" \"+ssg0.snakes[10]!.pos[0].y.toFixed(2)\n                                               +\" \"+ssg0.snakes[10]!.pos[1].x.toFixed(2)+\" \"+ssg0.snakes[10]!.pos[1].y.toFixed(2)\n                                               +\" \"+ssg0.snakes[10]!.pos[2].x.toFixed(2)+\" \"+ssg0.snakes[10]!.pos[2].y.toFixed(2))\n\n        ws.send(arr);\n      }\n    } else {\n      console.log(\"Unknown message type: \"+type)\n    }\n  });\n  //ws.send(\"Hello ??? \");\n\n  wsServer.on('close', function(reasonCode:number, description:string) {\n    console.log((new Date()) + \" Peer \" + wsServer.address + \" disconnected.\");\n  });\n});\n\n\n\n","'use strict';\n\nconst Limiter = require('async-limiter');\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst constants = require('./constants');\n\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst EMPTY_BLOCK = Buffer.from([0x00]);\n\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kWriteInProgress = Symbol('write-in-progress');\nconst kPendingClose = Symbol('pending-close');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} options.serverNoContextTakeover Request/accept disabling\n   *     of server context takeover\n   * @param {Boolean} options.clientNoContextTakeover Advertise/acknowledge\n   *     disabling of client context takeover\n   * @param {(Boolean|Number)} options.serverMaxWindowBits Request/confirm the\n   *     use of a custom server window size\n   * @param {(Boolean|Number)} options.clientMaxWindowBits Advertise support\n   *     for, or request, a custom client window size\n   * @param {Object} options.zlibDeflateOptions Options to pass to zlib on deflate\n   * @param {Object} options.zlibInflateOptions Options to pass to zlib on inflate\n   * @param {Number} options.threshold Size (in bytes) below which messages\n   *     should not be compressed\n   * @param {Number} options.concurrencyLimit The number of concurrent calls to\n   *     zlib\n   * @param {Boolean} isServer Create the instance in either server or client\n   *     mode\n   * @param {Number} maxPayload The maximum allowed message length\n   */\n  constructor (options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold = this._options.threshold !== undefined\n      ? this._options.threshold\n      : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency = this._options.concurrencyLimit !== undefined\n        ? this._options.concurrencyLimit\n        : 10;\n      zlibLimiter = new Limiter({ concurrency });\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName () {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer () {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept (configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup () {\n    if (this._inflate) {\n      if (this._inflate[kWriteInProgress]) {\n        this._inflate[kPendingClose] = true;\n      } else {\n        this._inflate.close();\n        this._inflate = null;\n      }\n    }\n    if (this._deflate) {\n      if (this._deflate[kWriteInProgress]) {\n        this._deflate[kPendingClose] = true;\n      } else {\n        this._deflate.close();\n        this._deflate = null;\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer (offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient (response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams (configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        var value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited by async-limiter.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress (data, fin, callback) {\n    zlibLimiter.push((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited by async-limiter.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress (data, fin, callback) {\n    zlibLimiter.push((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress (data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits = typeof this.params[key] !== 'number'\n        ? zlib.Z_DEFAULT_WINDOWBITS\n        : this.params[key];\n\n      this._inflate = zlib.createInflateRaw(\n        Object.assign({}, this._options.zlibInflateOptions, { windowBits })\n      );\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n    this._inflate[kWriteInProgress] = true;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (\n        (fin && this.params[`${endpoint}_no_context_takeover`]) ||\n        this._inflate[kPendingClose]\n      ) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kWriteInProgress] = false;\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress (data, fin, callback) {\n    if (!data || data.length === 0) {\n      process.nextTick(callback, null, EMPTY_BLOCK);\n      return;\n    }\n\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits = typeof this.params[key] !== 'number'\n        ? zlib.Z_DEFAULT_WINDOWBITS\n        : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw(\n        Object.assign(\n          // TODO deprecate memLevel/level and recommend zlibDeflateOptions instead\n          {\n            memLevel: this._options.memLevel,\n            level: this._options.level\n          },\n          this._options.zlibDeflateOptions,\n          { windowBits }\n        )\n      );\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      //\n      // `zlib.DeflateRaw` emits an `'error'` event only when an attempt to use\n      // it is made after it has already been closed. This cannot happen here,\n      // so we only add a listener for the `'data'` event.\n      //\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kWriteInProgress] = true;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      var data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) data = data.slice(0, data.length - 4);\n\n      if (\n        (fin && this.params[`${endpoint}_no_context_takeover`]) ||\n        this._deflate[kPendingClose]\n      ) {\n        this._deflate.close();\n        this._deflate = null;\n      } else {\n        this._deflate[kWriteInProgress] = false;\n        this._deflate[kTotalLength] = 0;\n        this._deflate[kBuffers] = [];\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData (chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData (chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError][constants.kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError (err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[constants.kStatusCode] = 1007;\n  this[kCallback](err);\n}\n","export function dist(x1:number, y1:number, x2:number, y2:number):number{\n  let dx = x2-x1;\n  let dy = y2-y1;\n  return Math.sqrt(dx*dx+dy*dy);\n}\n\n// adapted from https://github.com/kittykatattack/learningPixi#keyboard\nexport function keyboard(keyCode:number) {\n  let key:any = {}\n  key.code = keyCode;\n  key.isDown = false;\n  key.isUp = true;\n  key.press = undefined;\n  key.release = undefined;\n  //The `downHandler`\n  key.downHandler = (event:any) => {\n    if (event.keyCode === key.code) {\n      if (key.isUp && key.press) key.press();\n      key.isDown = true;\n      key.isUp = false;\n    }else console.log(\"unknown = \"+event.keyCode)\n    event.preventDefault();\n  };\n\n  //The `upHandler`\n  key.upHandler = (event:any) => {\n    if (event.keyCode === key.code) {\n      if (key.isDown && key.release) key.release();\n      key.isDown = false;\n      key.isUp = true;\n    }\n    event.preventDefault();\n  };\n\n  //Attach event listeners\n  window.addEventListener(\n    \"keydown\", key.downHandler.bind(key), false\n  );\n  window.addEventListener(\n    \"keyup\", key.upHandler.bind(key), false\n  );\n  return key;\n}","'use strict';\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat (list, totalLength) {\n  const target = Buffer.allocUnsafe(totalLength);\n  var offset = 0;\n\n  for (var i = 0; i < list.length; i++) {\n    const buf = list[i];\n    buf.copy(target, offset);\n    offset += buf.length;\n  }\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask (source, mask, output, offset, length) {\n  for (var i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask (buffer, mask) {\n  // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n  const length = buffer.length;\n  for (var i = 0; i < length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\ntry {\n  const bufferUtil = require('bufferutil');\n  const bu = bufferUtil.BufferUtil || bufferUtil;\n\n  module.exports = {\n    mask (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bu.mask(source, mask, output, offset, length);\n    },\n    unmask (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bu.unmask(buffer, mask);\n    },\n    concat\n  };\n} catch (e) /* istanbul ignore next */ {\n  module.exports = { concat, mask: _mask, unmask: _unmask };\n}\n","module.exports = require(\"crypto\");","module.exports = require(\"path\");","'use strict';\n\nconst crypto = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst bufferUtil = require('./buffer-util');\nconst validation = require('./validation');\nconst constants = require('./constants');\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {net.Socket} socket The connection socket\n   * @param {Object} extensions An object containing the negotiated extensions\n   */\n  constructor (socket, extensions) {\n    this._extensions = extensions || {};\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._deflating = false;\n    this._queue = [];\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {Buffer} data The data to frame\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} options.readOnly Specifies whether `data` can be modified\n   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit\n   * @return {Buffer[]} The framed data as a list of `Buffer` instances\n   * @public\n   */\n  static frame (data, options) {\n    const merge = data.length < 1024 || (options.mask && options.readOnly);\n    var offset = options.mask ? 6 : 2;\n    var payloadLength = data.length;\n\n    if (data.length >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (data.length > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? data.length + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(data.length, 2);\n    } else if (payloadLength === 127) {\n      target.writeUInt32BE(0, 2);\n      target.writeUInt32BE(data.length, 6);\n    }\n\n    if (!options.mask) {\n      target[1] = payloadLength;\n      if (merge) {\n        data.copy(target, offset);\n        return [target];\n      }\n\n      return [target, data];\n    }\n\n    const mask = crypto.randomBytes(4);\n\n    target[1] = payloadLength | 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (merge) {\n      bufferUtil.mask(data, mask, target, offset, data.length);\n      return [target];\n    }\n\n    bufferUtil.mask(data, mask, data, 0, data.length);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {(Number|undefined)} code The status code component of the body\n   * @param {String} data The message component of the body\n   * @param {Boolean} mask Specifies whether or not to mask the message\n   * @param {Function} cb Callback\n   * @public\n   */\n  close (code, data, mask, cb) {\n    var buf;\n\n    if (code === undefined) {\n      buf = constants.EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !validation.isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || data === '') {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      buf = Buffer.allocUnsafe(2 + Buffer.byteLength(data));\n      buf.writeUInt16BE(code, 0);\n      buf.write(data, 2);\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doClose, buf, mask, cb]);\n    } else {\n      this.doClose(buf, mask, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a close message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @private\n   */\n  doClose (data, mask, cb) {\n    this.sendFrame(Sender.frame(data, {\n      fin: true,\n      rsv1: false,\n      opcode: 0x08,\n      mask,\n      readOnly: false\n    }), cb);\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @public\n   */\n  ping (data, mask, cb) {\n    var readOnly = true;\n\n    if (!Buffer.isBuffer(data)) {\n      if (data instanceof ArrayBuffer) {\n        data = Buffer.from(data);\n      } else if (ArrayBuffer.isView(data)) {\n        data = viewToBuffer(data);\n      } else {\n        data = Buffer.from(data);\n        readOnly = false;\n      }\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doPing, data, mask, readOnly, cb]);\n    } else {\n      this.doPing(data, mask, readOnly, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a ping message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Boolean} readOnly Specifies whether `data` can be modified\n   * @param {Function} cb Callback\n   * @private\n   */\n  doPing (data, mask, readOnly, cb) {\n    this.sendFrame(Sender.frame(data, {\n      fin: true,\n      rsv1: false,\n      opcode: 0x09,\n      mask,\n      readOnly\n    }), cb);\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @public\n   */\n  pong (data, mask, cb) {\n    var readOnly = true;\n\n    if (!Buffer.isBuffer(data)) {\n      if (data instanceof ArrayBuffer) {\n        data = Buffer.from(data);\n      } else if (ArrayBuffer.isView(data)) {\n        data = viewToBuffer(data);\n      } else {\n        data = Buffer.from(data);\n        readOnly = false;\n      }\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doPong, data, mask, readOnly, cb]);\n    } else {\n      this.doPong(data, mask, readOnly, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a pong message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Boolean} readOnly Specifies whether `data` can be modified\n   * @param {Function} cb Callback\n   * @private\n   */\n  doPong (data, mask, readOnly, cb) {\n    this.sendFrame(Sender.frame(data, {\n      fin: true,\n      rsv1: false,\n      opcode: 0x0a,\n      mask,\n      readOnly\n    }), cb);\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} options.compress Specifies whether or not to compress `data`\n   * @param {Boolean} options.binary Specifies whether `data` is binary or text\n   * @param {Boolean} options.fin Specifies whether the fragment is the last one\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @public\n   */\n  send (data, options, cb) {\n    var opcode = options.binary ? 2 : 1;\n    var rsv1 = options.compress;\n    var readOnly = true;\n\n    if (!Buffer.isBuffer(data)) {\n      if (data instanceof ArrayBuffer) {\n        data = Buffer.from(data);\n      } else if (ArrayBuffer.isView(data)) {\n        data = viewToBuffer(data);\n      } else {\n        data = Buffer.from(data);\n        readOnly = false;\n      }\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (rsv1 && perMessageDeflate) {\n        rsv1 = data.length >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    if (perMessageDeflate) {\n      const opts = {\n        fin: options.fin,\n        rsv1,\n        opcode,\n        mask: options.mask,\n        readOnly\n      };\n\n      if (this._deflating) {\n        this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n      } else {\n        this.dispatch(data, this._compress, opts, cb);\n      }\n    } else {\n      this.sendFrame(Sender.frame(data, {\n        fin: options.fin,\n        rsv1: false,\n        opcode,\n        mask: options.mask,\n        readOnly\n      }), cb);\n    }\n  }\n\n  /**\n   * Dispatches a data message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} compress Specifies whether or not to compress `data`\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} options.readOnly Specifies whether `data` can be modified\n   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit\n   * @param {Function} cb Callback\n   * @private\n   */\n  dispatch (data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._deflating = true;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this._deflating = false;\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue () {\n    while (!this._deflating && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[1].length;\n      params[0].apply(this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue (params) {\n    this._bufferedBytes += params[1].length;\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} cb Callback\n   * @private\n   */\n  sendFrame (list, cb) {\n    if (list.length === 2) {\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n\n/**\n * Converts an `ArrayBuffer` view into a buffer.\n *\n * @param {(DataView|TypedArray)} view The view to convert\n * @return {Buffer} Converted view\n * @private\n */\nfunction viewToBuffer (view) {\n  const buf = Buffer.from(view.buffer);\n\n  if (view.byteLength !== view.buffer.byteLength) {\n    return buf.slice(view.byteOffset, view.byteOffset + view.byteLength);\n  }\n\n  return buf;\n}\n","'use strict';\n\ntry {\n  const isValidUTF8 = require('utf-8-validate');\n\n  exports.isValidUTF8 = typeof isValidUTF8 === 'object'\n    ? isValidUTF8.Validation.isValidUTF8 // utf-8-validate@<3.0.0\n    : isValidUTF8;\n} catch (e) /* istanbul ignore next */ {\n  exports.isValidUTF8 = () => true;\n}\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nexports.isValidStatusCode = (code) => {\n  return (\n    (code >= 1000 &&\n      code <= 1013 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n};\n","'use strict';\n\nconst stream = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst bufferUtil = require('./buffer-util');\nconst validation = require('./validation');\nconst constants = require('./constants');\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends stream.Writable\n */\nclass Receiver extends stream.Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {String} binaryType The type for binary data\n   * @param {Object} extensions An object containing the negotiated extensions\n   * @param {Number} maxPayload The maximum allowed message length\n   */\n  constructor (binaryType, extensions, maxPayload) {\n    super();\n\n    this._binaryType = binaryType || constants.BINARY_TYPES[0];\n    this[constants.kWebSocket] = undefined;\n    this._extensions = extensions || {};\n    this._maxPayload = maxPayload | 0;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._state = GET_INFO;\n    this._loop = false;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   */\n  _write (chunk, encoding, cb) {\n    if (this._opcode === 0x08) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume (n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = buf.slice(n);\n      return buf.slice(0, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n\n      if (n >= buf.length) {\n        this._buffers.shift().copy(dst, dst.length - n);\n      } else {\n        buf.copy(dst, dst.length - n, 0, n);\n        this._buffers[0] = buf.slice(n);\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop (cb) {\n    var err;\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          err = this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          err = this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          err = this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          err = this.getData(cb);\n          break;\n        default: // `INFLATING`\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    cb(err);\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getInfo () {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this._loop = false;\n      return error(RangeError, 'RSV2 and RSV3 must be clear', true, 1002);\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      this._loop = false;\n      return error(RangeError, 'RSV1 must be clear', true, 1002);\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this._loop = false;\n        return error(RangeError, 'RSV1 must be clear', true, 1002);\n      }\n\n      if (!this._fragmented) {\n        this._loop = false;\n        return error(RangeError, 'invalid opcode 0', true, 1002);\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this._loop = false;\n        return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002);\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this._loop = false;\n        return error(RangeError, 'FIN must be set', true, 1002);\n      }\n\n      if (compressed) {\n        this._loop = false;\n        return error(RangeError, 'RSV1 must be clear', true, 1002);\n      }\n\n      if (this._payloadLength > 0x7d) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002\n        );\n      }\n    } else {\n      this._loop = false;\n      return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002);\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength16 () {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength64 () {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009\n      );\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    return this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  haveLength () {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        this._loop = false;\n        return error(RangeError, 'Max payload size exceeded', false, 1009);\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask () {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  getData (cb) {\n    var data = constants.EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n      if (this._masked) bufferUtil.unmask(data, this._mask);\n    }\n\n    if (this._opcode > 0x07) return this.controlMessage(data);\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its lenght is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    return this.dataMessage();\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress (data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          return cb(error(RangeError, 'Max payload size exceeded', false, 1009));\n        }\n\n        this._fragments.push(buf);\n      }\n\n      const er = this.dataMessage();\n      if (er) return cb(er);\n\n      this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */\n  dataMessage () {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n\n      if (this._opcode === 2) {\n        var data;\n\n        if (this._binaryType === 'nodebuffer') {\n          data = toBuffer(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(toBuffer(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.emit('message', data);\n      } else {\n        const buf = toBuffer(fragments, messageLength);\n\n        if (!validation.isValidUTF8(buf)) {\n          this._loop = false;\n          return error(Error, 'invalid UTF-8 sequence', true, 1007);\n        }\n\n        this.emit('message', buf.toString());\n      }\n    }\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage (data) {\n    if (this._opcode === 0x08) {\n      this._loop = false;\n\n      if (data.length === 0) {\n        this.emit('conclude', 1005, '');\n        this.end();\n      } else if (data.length === 1) {\n        return error(RangeError, 'invalid payload length 1', true, 1002);\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!validation.isValidStatusCode(code)) {\n          return error(RangeError, `invalid status code ${code}`, true, 1002);\n        }\n\n        const buf = data.slice(2);\n\n        if (!validation.isValidUTF8(buf)) {\n          return error(Error, 'invalid UTF-8 sequence', true, 1007);\n        }\n\n        this.emit('conclude', code, buf.toString());\n        this.end();\n      }\n\n      return;\n    }\n\n    if (this._opcode === 0x09) this.emit('ping', data);\n    else this.emit('pong', data);\n\n    this._state = GET_INFO;\n  }\n}\n\nmodule.exports = Receiver;\n\n/**\n * Builds an error object.\n *\n * @param {(Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @return {(Error|RangeError)} The error\n * @private\n */\nfunction error (ErrorCtor, message, prefix, statusCode) {\n  const err = new ErrorCtor(\n    prefix ? `Invalid WebSocket frame: ${message}` : message\n  );\n\n  Error.captureStackTrace(err, error);\n  err[constants.kStatusCode] = statusCode;\n  return err;\n}\n\n/**\n * Makes a buffer from a list of fragments.\n *\n * @param {Buffer[]} fragments The list of fragments composing the message\n * @param {Number} messageLength The length of the message\n * @return {Buffer}\n * @private\n */\nfunction toBuffer (fragments, messageLength) {\n  if (fragments.length === 1) return fragments[0];\n  if (fragments.length > 1) return bufferUtil.concat(fragments, messageLength);\n  return constants.EMPTY_BUFFER;\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n */\nfunction toArrayBuffer (buf) {\n  if (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n}\n","'use strict';\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push (dest, name, elem) {\n  if (Object.prototype.hasOwnProperty.call(dest, name)) dest[name].push(elem);\n  else dest[name] = [elem];\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse (header) {\n  const offers = {};\n\n  if (header === undefined || header === '') return offers;\n\n  var params = {};\n  var mustUnescape = false;\n  var isEscaping = false;\n  var inQuotes = false;\n  var extensionName;\n  var paramName;\n  var start = -1;\n  var end = -1;\n\n  for (var i = 0; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20/* ' ' */|| code === 0x09/* '\\t' */) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b/* ';' */ || code === 0x2c/* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = {};\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = {};\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d/* '=' */&& start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22/* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c/* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        var value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = {};\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, {});\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format (extensions) {\n  return Object.keys(extensions).map((extension) => {\n    var configurations = extensions[extension];\n    if (!Array.isArray(configurations)) configurations = [configurations];\n    return configurations.map((params) => {\n      return [extension].concat(Object.keys(params).map((k) => {\n        var values = params[k];\n        if (!Array.isArray(values)) values = [values];\n        return values.map((v) => v === true ? k : `${k}=${v}`).join('; ');\n      })).join('; ');\n    }).join(', ');\n  }).join(', ');\n}\n\nmodule.exports = { format, parse };\n"],"sourceRoot":""}